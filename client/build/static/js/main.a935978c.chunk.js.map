{"version":3,"sources":["config.js","actions/auth/index.js","actions/core/cartHelpers.js","components/core/Menu.js","components/core/Layout.js","components/user/Signup.js","components/user/Signin.js","actions/core/apiCore.js","actions/core/ShowImage.js","components/core/Card.js","components/core/Search.js","components/core/Home.js","actions/auth/PrivateRoute.js","actions/auth/AdminRoute.js","components/user/UserDashboard.js","actions/user/apiUser.js","components/admin/AdminDashboard.js","actions/admin/apiAdmin.js","components/admin/AddCategory.js","components/admin/AddProduct.js","components/core/Checkbox.js","components/core/RadioBox.js","components/core/fixedPrices.js","components/core/Shop.js","components/core/Product.js","components/core/Checkout.js","components/core/Cart.js","components/admin/Orders.js","components/user/Profile.js","components/admin/ManageProducts.js","components/admin/UpdateProduct.js","Routes.js","index.js"],"names":["API","process","REACT_APP_API_URL","isAuthenticated","localStorage","jwt","JSON","parse","getItem","emptyCart","next","removeItem","isActive","history","path","location","pathname","color","withRouter","className","style","to","length","user","role","cursor","onClick","fetch","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Signup","useState","name","email","password","error","success","values","setValues","handleChange","e","target","value","clickSubmit","event","preventDefault","headers","Accept","body","stringify","json","data","display","onChange","type","Signin","loading","redirectToReferrer","signin","setItem","authenticate","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","item","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","addToCart","cart","Array","from","Set","map","p","id","find","addItem","productId","i","updateItem","shouldRedirect","substring","price","category","moment","createdAt","fromNow","quantity","showViewButton","showAddToCart","splice","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","hasSearched","setData","useEffect","loadCategories","dataSentBack","searchData","params","query","queryString","list","searchSubmit","searchMessage","onSubmit","c","key","placeholder","border","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","loadProductsByArrival","loadProductsBySell","PrivateRoute","Component","component","rest","render","props","state","AdminRoute","Dashboard","setHistory","token","init","userId","Authorization","getPurchaseHistory","orders","products","purchaseHistory","AdminDashboard","AddCategory","setName","oldName","setOldName","setError","setSuccess","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","formData","FormData","files","set","createProduct","accept","Checkbox","handleFilters","checked","setChecked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","prices","array","Shop","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","myFilters","setMyFilters","loadFilteredResults","loadMore","toSkip","newFilters","filterBy","priceValues","handlePrice","parseInt","Product","setProduct","relatedProduct","setRelatedProduct","match","loadSingleProduct","read","listRelated","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","accumulator","nextValue","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","onBlur","options","authorization","paypal","flow","onInstance","Cart","items","showItems","Orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","borderBottom","backgroundColor","showStatus","padding","Profile","update","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","getProduct","initCategories","updateProduct","setTimeout","window","reload","Routes","exact","ReactDOM","document","getElementById"],"mappings":"qPAAaA,EAAMC,mHAAYC,kBCmElBC,EAAkB,WAC7B,QAAKC,aAAaC,MAEPD,aAAaC,IAGfC,KAAKC,MAAMH,aAAaI,QAAQ,aAHlC,IC6BIC,EAAY,SAACC,GACxBN,aAAaO,WAAW,QACxBD,KC5FIE,EAAW,SAACC,EAASC,GACzB,OAAID,EAAQE,SAASC,WAAaF,EACzB,CAAEG,MAAO,WAET,CAAEA,MAAO,YA4GLC,eAvGF,SAAC,GAAD,IAAGL,EAAH,EAAGA,QAAH,OACX,6BACE,wBAAIM,UAAU,2BAEZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,KAAMQ,GAAG,KAA7D,SAKF,wBAAIF,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVC,MAAOR,EAASC,EAAS,SACzBQ,GAAG,SAHL,SASF,wBAAIF,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVC,MAAOR,EAASC,EAAS,SACzBQ,GAAIlB,IAAoB,QAAU,WAHpC,QAME,6BACE,2BAAOgB,UAAU,cDVvBf,aAAaI,QAAQ,QAEhBF,KAAKC,MAAMH,aAAaI,QAAQ,SAASc,OAG3C,MCWFnB,KAAqD,IAAhCA,IAAkBoB,KAAKC,MAC3C,wBAAIL,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVC,MAAOR,EAASC,EAAS,mBACzBQ,GAAG,mBAHL,cAUHlB,KAAqD,IAAhCA,IAAkBoB,KAAKC,MAC3C,wBAAIL,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVC,MAAOR,EAASC,EAAS,oBACzBQ,GAAG,oBAHL,eAWFlB,KACA,oCACE,4BACE,kBAAC,IAAD,CACEgB,UAAU,WACVC,MAAOR,EAASC,EAAS,WACzBQ,GAAG,WAHL,WASF,4BACE,kBAAC,IAAD,CACEF,UAAU,WACVC,MAAOR,EAASC,EAAS,WACzBQ,GAAG,WAHL,YAWLlB,KACC,wBAAIgB,UAAU,YACZ,0BACEA,UAAU,WACVC,MAAO,CAAEK,OAAQ,UAAWR,MAAO,WACnCS,QAAS,kBFxDE,SAAChB,GAEtB,GAAIN,aAAaC,IAKf,OAJAD,aAAaO,WAAW,OACxBP,aAAaO,WAAW,QAExBD,IACOiB,MAAM,GAAD,OAAI3B,EAAJ,iBAAwB,CAClC4B,OAAQ,QAEPC,MAAK,SAACC,GACLC,QAAQC,IAAI,UAAWF,MAExBG,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,ME4CpBC,EAAQ,WACNtB,EAAQuB,KAAK,UALnB,iBCjFKC,G,MAlBA,SAAC,GAAD,QACbC,aADa,MACL,QADK,MAEbC,mBAFa,MAEC,cAFD,EAGbpB,EAHa,EAGbA,UACAqB,EAJa,EAIbA,SAJa,OAOb,iCACE,kBAAC,EAAD,MACA,yBAAKrB,UAAU,aACb,4BAAKmB,GACL,uBAAGnB,UAAU,QAAQoB,IAGvB,yBAAKpB,UAAWA,GAAYqB,MCqGjBC,EAlHA,WAAO,IAAD,EACSC,mBAAS,CACnCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,SAAS,IANQ,mBACZC,EADY,KACJC,EADI,KAUXN,EAA0CK,EAA1CL,KAAMC,EAAoCI,EAApCJ,MAAOC,EAA6BG,EAA7BH,SAAUE,EAAmBC,EAAnBD,QAASD,EAAUE,EAAVF,MAElCI,EAAe,SAACC,GAEpBF,EAAU,2BAAKD,GAAN,gBAAcF,OAAO,GAAQK,EAAEC,OAAOT,KAAOQ,EAAEC,OAAOC,UAI3DC,EAAc,SAACC,GJrBD,IAAChC,EIsBnBgC,EAAMC,iBACNP,EAAU,2BAAKD,GAAN,IAAcF,OAAO,MJvBXvB,EIyBZ,CAAEoB,OAAMC,QAAOC,YJvBjBlB,MAAM,GAAD,OAAI3B,EAAJ,gBAAuB,CACjC4B,OAAQ,OACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAGlBC,KAAMrD,KAAKsD,UAAUrC,KAEpBM,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GACNH,QAAQC,IAAIE,OIUoBL,MAAK,SAACiC,GAElCA,EAAKhB,MACPG,EAAU,2BAAKD,GAAN,IAAcF,MAAOgB,EAAKhB,MAAOC,SAAS,KAEnDE,EAAU,2BACLD,GADI,IAEPL,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,SAAS,SAkEjB,OACE,kBAAC,EAAD,CACET,MAAM,SACNC,YAAY,sCACZpB,UAAU,kCAZZ,yBACEA,UAAU,mBACVC,MAAO,CAAE2C,QAAShB,EAAU,GAAK,SAFnC,wCAIuC,kBAAC,IAAD,CAAM1B,GAAG,WAAT,WAbvC,yBACEF,UAAU,qBACVC,MAAO,CAAE2C,QAASjB,EAAQ,GAAK,SAE9BA,GA7CH,8BACE,yBAAK3B,UAAU,cACb,2BAAOA,UAAU,cAAjB,QACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,OACL9C,UAAU,eACVwB,KAAK,OACLU,MAAOV,KAIX,yBAAKxB,UAAU,cACb,2BAAOA,UAAU,cAAjB,SACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,QACL9C,UAAU,eACVwB,KAAK,QACLU,MAAOT,KAIX,yBAAKzB,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,WACL9C,UAAU,eACVwB,KAAK,WACLU,MAAOR,KAIX,4BAAQnB,QAAS4B,EAAanC,UAAU,mBAAxC,aCiDS+C,EAvHA,WAAO,IAAD,EACSxB,mBAAS,CACnCE,MAAO,GACPC,SAAU,GACVC,MAAO,GACPqB,SAAS,EACTC,oBAAoB,IANH,mBACZpB,EADY,KACJC,EADI,KAUXL,EAAwDI,EAAxDJ,MAAOC,EAAiDG,EAAjDH,SAAUsB,EAAuCnB,EAAvCmB,QAASrB,EAA8BE,EAA9BF,MAAOsB,EAAuBpB,EAAvBoB,mBACjC7C,EAASpB,IAAToB,KAEF2B,EAAe,SAACC,GAEpBF,EAAU,2BAAKD,GAAN,gBAAcF,OAAO,GAAQK,EAAEC,OAAOT,KAAOQ,EAAEC,OAAOC,UAG3DC,EAAc,SAACC,GACnBA,EAAMC,iBACNP,EAAU,2BAAKD,GAAN,IAAcF,OAAO,EAAOqB,SAAS,KLT5B,SAAC5C,GAErB,OAAOI,MAAM,GAAD,OAAI3B,EAAJ,gBAAuB,CACjC4B,OAAQ,OACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAGlBC,KAAMrD,KAAKsD,UAAUrC,KAEpBM,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GACNH,QAAQC,IAAIE,MKJdmC,CAAO,CAAEzB,QAAOC,aAAYhB,MAAK,SAACiC,GAE5BA,EAAKhB,MACPG,EAAU,2BAAKD,GAAN,IAAcF,MAAOgB,EAAKhB,MAAOqB,SAAS,KLM/B,SAACL,EAAMpD,GAE5BN,aAAaC,MAChBD,aAAakE,QAAQ,MAAOhE,KAAKsD,UAAUE,IAE3CpD,KKRI6D,CAAaT,GAAM,WACjBrD,GAAU,WACRwC,EAAU,2BACLD,GADI,IAEPoB,oBAAoB,eAuEhC,OACE,kBAAC,EAAD,CACE9B,MAAM,SACNC,YAAY,sCACZpB,UAAU,kCAzBZgD,GACE,yBAAKhD,UAAU,oBACb,2CAMAiD,EACE7C,GAAsB,IAAdA,EAAKC,KACR,kBAAC,IAAD,CAAUH,GAAG,qBAEb,kBAAC,IAAD,CAAUA,GAAG,oBAIpBlB,IACK,kBAAC,IAAD,CAAUkB,GAAG,WADtB,EA1BA,yBACEF,UAAU,qBACVC,MAAO,CAAE2C,QAASjB,EAAQ,GAAK,SAE9BA,GAlCH,8BACE,yBAAK3B,UAAU,cACb,2BAAOA,UAAU,cAAjB,SACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,QACL9C,UAAU,eACVwB,KAAK,QACLU,MAAOT,KAIX,yBAAKzB,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,WACL9C,UAAU,eACVwB,KAAK,WACLU,MAAOR,KAIX,4BAAQnB,QAAS4B,EAAanC,UAAU,mBAAxC,a,iBCvEOqD,EAAc,SAACC,GAC1B,OAAO9C,MAAM,GAAD,OAAI3B,EAAJ,oCAAmCyE,EAAnC,uBAAgE,CAC1E7C,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OAGnBwC,EAAgB,WAC3B,OAAO/C,MAAM,GAAD,OAAI3B,EAAJ,eAAsB,CAChC4B,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OAKnByC,EAAsB,SAACC,EAAMC,GAAyB,IAAlBC,EAAiB,uDAAP,GACnDhB,EAAO,CACXe,QACAD,OACAE,WAGF,OAAOnD,MAAM,GAAD,OAAI3B,EAAJ,uBAA8B,CACxC4B,OAAQ,OACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAGlBC,KAAMrD,KAAKsD,UAAUE,KAEpBjC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GACNH,QAAQC,IAAIE,OChCH6C,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,yBAAK7D,UAAU,eACb,yBACE8D,IAAG,UAAKjF,EAAL,2BAA2BgF,EAAKE,KACnCC,IAAKH,EAAKrC,KACVxB,UAAU,OACVC,MAAO,CAACgE,UAAU,QAASC,SAAU,Y,iBCgK5BC,EA1JF,SAAC,GAQP,IAPLC,EAOI,EAPJA,QAOI,IANJC,6BAMI,aALJC,2BAKI,aAJJC,kBAII,aAHJC,+BAGI,aAFJC,cAEI,MAFK,SAACC,GAAD,OAAOA,GAEZ,MADJC,WACI,WADEC,EACF,IAE4BrD,oBAAS,GAFrC,mBAEGsD,EAFH,KAEaC,EAFb,OAGsBvD,mBAAS6C,EAAQW,OAHvC,mBAGGA,EAHH,KAGUC,EAHV,KAkBEC,EAAY,YPxCG,SAACpB,EAAMtE,GAC5B,IAAI2F,EAAO,GAGPjG,aAAaI,QAAQ,UAEvB6F,EAAO/F,KAAKC,MAAMH,aAAaI,QAAQ,UAIzC6F,EAAKjE,KAAL,2BACK4C,GADL,IAGEkB,MAAO,KAOTG,EAAOC,MAAMC,KAAK,IAAIC,IAAIH,EAAKI,KAAI,SAACC,GAAD,OAAOA,EAAExB,SAAOuB,KAAI,SAACE,GAItD,OAAON,EAAKO,MAAK,SAACF,GAAD,OAAOA,EAAExB,MAAQyB,QAIpCvG,aAAakE,QAAQ,OAAQhE,KAAKsD,UAAUyC,IAC5C3F,IOaEmG,CAAQtB,GAAS,WAEfU,GAAY,OAuCV/C,EAAe,SAACC,GAEpByC,GAAQE,GAGRK,EAAShD,EAAEC,OAAOC,MAAQ,EAAI,EAAIF,EAAEC,OAAOC,OAEvCF,EAAEC,OAAOC,OAAS,GPpCA,SAACyD,EAAWZ,GACpC,IAAIG,EAAO,GAEPjG,aAAaI,QAAQ,UAEvB6F,EAAO/F,KAAKC,MAAMH,aAAaI,QAAQ,UAGzC6F,EAAKI,KAAI,SAAClB,EAASwB,GAEbxB,EAAQL,MAAQ4B,IAGlBT,EAAKU,GAAGb,MAAQA,MAIpB9F,aAAakE,QAAQ,OAAQhE,KAAKsD,UAAUyC,IOqBxCW,CAAWzB,EAAQL,IAAK/B,EAAEC,OAAOC,QA6CrC,OACE,yBAAKlC,UAAU,QACb,yBAAKA,UAAU,oBAAoBoE,EAAQ5C,MAE3C,yBAAKxB,UAAU,aA7FI,SAAC6E,GACtB,GAAIA,EACF,OAAO,kBAAC,IAAD,CAAU3E,GAAG,UA4FjB4F,CAAejB,GAChB,kBAAC,EAAD,CAAWhB,KAAMO,IAGjB,uBAAGpE,UAAU,aAAaoE,EAAQhD,YAAY2E,UAAU,EAAG,MAC3D,uBAAG/F,UAAU,YAAb,IAA0BoE,EAAQ4B,OAClC,uBAAGhG,UAAU,WAAb,aACaoE,EAAQ6B,UAAY7B,EAAQ6B,SAASzE,MAElD,uBAAGxB,UAAU,WAAb,YACYkG,IAAO9B,EAAQ+B,WAAWC,WAG3BhC,EAAQiC,SAhFL,EAChB,0BAAMrG,UAAU,kCAAhB,YAEA,0BAAMA,UAAU,kCAAhB,gBA8EE,6BAjIiB,SAACqE,GACtB,OAEEA,GACE,kBAAC,IAAD,CAAMnE,GAAE,oBAAekE,EAAQL,KAAO/D,UAAU,QAC9C,4BAAQA,UAAU,0CAAlB,iBA6HDsG,CAAejC,GAvGA,SAACC,GACrB,OACEtF,IAEEsF,GACE,4BACE/D,QAAS0E,EACTjF,UAAU,qCAFZ,eAOFsE,GACE,kBAAC,IAAD,CAAMpE,GAAG,UAAUF,UAAU,qCAA7B,eA4FDuG,CAAcjC,GA1CI,SAACE,GACxB,OAEEA,GACE,4BACEjE,QAAS,WAEPkE,GAAQE,GPlDM,SAACgB,GACzB,IAAIT,EAAO,GAEPjG,aAAaI,QAAQ,UAEvB6F,EAAO/F,KAAKC,MAAMH,aAAaI,QAAQ,UAGzC6F,EAAKI,KAAI,SAAClB,EAASwB,GAEbxB,EAAQL,MAAQ4B,GAGlBT,EAAKsB,OAAOZ,EAAG,MAInB3G,aAAakE,QAAQ,OAAQhE,KAAKsD,UAAUyC,IOkClC1F,CAAW4E,EAAQL,MAErB/D,UAAU,oCANZ,kBAuCCyG,CAAiBjC,GAhEM,SAACD,GAE7B,OACEA,GACE,iCACE,yBAAKvE,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,mBACA,2BACE8C,KAAK,SACL9C,UAAU,eACVkC,MAAO6C,EACPlC,SAAU,SAACb,GAAD,OAAOD,EAAaC,SAqDrC0E,CAAsBnC,MCtBhBoC,EAxIA,WAAO,IAAD,EACKpF,mBAAS,CAE/BqF,WAAY,GAEZX,SAAU,GACVY,OAAQ,GACRC,QAAS,GAETC,aAAa,IATI,mBACZpE,EADY,KACNqE,EADM,KAYnBC,qBAAU,WAERC,MACC,IAfgB,IAiBXN,EAAuDjE,EAAvDiE,WAAYX,EAA2CtD,EAA3CsD,SAAUY,EAAiClE,EAAjCkE,OAAQC,EAAyBnE,EAAzBmE,QAASC,EAAgBpE,EAAhBoE,YAGzCG,EAAiB,WACrB3D,IAAgB7C,MAAK,SAACyG,GAChBA,EAAaxF,MACff,QAAQC,IAAIsG,EAAaxF,OAEzBqF,EAAQ,2BAAKrE,GAAN,IAAYiE,WAAYO,SAK/BC,EAAa,WAEbP,GHgBY,SAACQ,GAEnB,IAAMC,EAAQC,IAAY9E,UAAU4E,GAGpC,OAAO7G,MAAM,GAAD,OAAI3B,EAAJ,iDAAgDyI,GAAS,CACnE7G,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MGzB1ByG,CAAK,CAAEX,OAAQA,QAAUjC,EAAWqB,aAAYvF,MAAK,SAACC,GAChDA,EAASgB,MACXf,QAAQC,IAAIF,EAASgB,QAErBqF,EAAQ,2BAAKrE,GAAN,IAAYmE,QAASnG,EAAUoG,aAAa,KACnDnG,QAAQC,IAAI8B,QAMd8E,EAAe,SAACzF,GACpBA,EAAEK,iBACF+E,KAGIrF,EAAe,SAACC,GAAO,IAAD,EAC1BgF,EAAQ,2BACHrE,GADE,uBAGJX,EAAEC,OAAOT,KAAOQ,EAAEC,OAAOC,OAHrB,6BAIQ,GAJR,MAQHwF,EAAgB,SAACX,EAAaD,GAClC,OAAIC,GAAeD,EAAQ3G,OAAS,EAC5B,SAAN,OAAgB2G,EAAQ3G,OAAxB,aAEE4G,GAAeD,EAAQ3G,OAAS,EAC5B,yBADR,GA+DF,OACE,iCACE,yBAAKH,UAAU,OACb,yBAAKA,UAAU,kBA5CnB,0BAAM2H,SAAUF,GACd,0BAAMzH,UAAU,oBACd,yBAAKA,UAAU,uBACb,4BACEA,UAAU,WACVwB,KAAK,WACLqB,SAAU,SAACb,GAAD,OAAOD,EAAaC,KAG9B,4BAAQE,MAAM,OAAd,OAIC0E,EAAWtB,KAAI,SAACsC,EAAGhC,GAAJ,OAEd,4BAAQiC,IAAKjC,EAAG1D,MAAO0F,EAAE7D,KACtB6D,EAAEpG,WAMX,yBAAKxB,UAAU,8BACb,2BACE8C,KAAK,SACL9C,UAAU,eACVwB,KAAK,SACLU,MAAO2E,EACPhE,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9B8F,YAAY,oBAIhB,yBAAK9H,UAAU,yBAAyBC,MAAO,CAAE8H,OAAQ,SACvD,4BAAQ/H,UAAU,oBAAlB,cAWF,yBAAKA,UAAU,wBA7DI,WAAmB,IAAlB8G,EAAiB,uDAAP,GAClC,OACE,iCACE,wBAAI9G,UAAU,aAAa0H,EAAcX,EAAaD,IACtD,yBAAK9G,UAAU,OAGZ8G,EAAQxB,KAAI,SAAClB,EAASwB,GAAV,OACX,kBAAC,EAAD,CAAMiC,IAAKjC,EAAGxB,QAASA,SAqDY4D,CAAiBlB,OC5DjDmB,EApEF,WAAM,MAE2B1G,mBAAS,IAFpC,mBAEV2G,EAFU,KAEMC,EAFN,OAIiC5G,mBAAS,IAJ1C,mBAIV6G,EAJU,KAISC,EAJT,KAOjBpB,qBAAU,WACRqB,IACAC,MACC,IAGH,IAAMA,EAAqB,WACzBlF,EAAY,QAAQ3C,MAAK,SAACiC,GACpBA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjBwG,EAAkBxF,OAMlB2F,EAAwB,WAC5BjF,EAAY,aAAa3C,MAAK,SAACiC,GACzBA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjB0G,EAAqB1F,OAK3B,OACE,kBAAC,EAAD,CACExB,MAAM,YACNC,YAAY,4BACZpB,UAAU,mBAEV,kBAAC,EAAD,MACA,wBAAIA,UAAU,QAAd,gBACA,yBAAKA,UAAU,OAIZoI,EAAkB9C,KAAI,SAAClB,EAASwB,GAAV,OACrB,yBAAKiC,IAAKjC,EAAG5F,UAAU,cACrB,kBAAC,EAAD,CAAMoE,QAASA,SAKrB,wBAAIpE,UAAU,QAAd,gBACA,yBAAKA,UAAU,OAIZkI,EAAe5C,KAAI,SAAClB,EAASwB,GAAV,OAClB,yBAAKiC,IAAKjC,EAAG5F,UAAU,cACrB,kBAAC,EAAD,CAAMoE,QAASA,W,QCvCZoE,EAnBM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACnB,kBAAC,IAAD,iBACMA,EADN,CAGEC,OAAQ,SAACC,GAAD,OAEN7J,IACE,kBAACyJ,EAAcI,GAGf,kBAAC,IAAD,CACE3I,GAAI,CAAEL,SAAU,UAAWiJ,MAAO,CAAE1D,KAAMyD,EAAMjJ,kBCQ3CmJ,EAnBI,SAAC,GAAD,IAAcN,EAAd,EAAGC,UAAyBC,EAA5B,oCACjB,kBAAC,IAAD,iBACMA,EADN,CAGEC,OAAQ,SAACC,GAAD,OAEN7J,KAAqD,IAAhCA,IAAkBoB,KAAKC,KAC1C,kBAACoI,EAAcI,GAGf,kBAAC,IAAD,CACE3I,GAAI,CAAEL,SAAU,UAAWiJ,MAAO,CAAE1D,KAAMyD,EAAMjJ,kBCwG3CoJ,EApHG,WAAM,MAEQzH,mBAAS,IAFjB,mBAEf7B,EAFe,KAENuJ,EAFM,OAMlBjK,IADFoB,KAAQ2D,EALY,EAKZA,IAAKvC,EALO,EAKPA,KAAMC,EALC,EAKDA,MAAOpB,EALN,EAKMA,KAGtB6I,EAAQlK,IAAkBkK,MAE1BC,EAAO,SAACC,EAAQF,ICiCU,SAACE,EAAQF,GACzC,OAAO1I,MAAM,GAAD,OAAI3B,EAAJ,2BAA0BuK,GAAU,CAC9C3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,MAG1BxI,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OD5C5BuI,CAAmBF,EAAQF,GAAOxI,MAAK,SAACiC,GAClCA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjBsH,EAAWtG,OAKjBsE,qBAAU,WACRkC,EAAKpF,EAAKmF,KACT,IA2EH,OACE,kBAAC,EAAD,CACE/H,MAAM,YACNC,YAAW,mBAAcI,EAAd,KACXxB,UAAU,aAEV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SA5EjB,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAd,cACA,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,YAIF,wBAAIF,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAE,kCAA6B6D,IAA1D,sBAoEJ,yBAAK/D,UAAU,SAzDjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,oBACA,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBAAmBwB,GACjC,wBAAIxB,UAAU,mBAAmByB,GACjC,wBAAIzB,UAAU,mBACF,IAATK,EAAa,QAAU,qBAQV,SAACX,GACvB,OACE,yBAAKM,UAAU,aACb,wBAAIA,UAAU,eAAd,oBACA,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBAGXN,EAAQ4F,KAAI,SAACiE,GACZ,OACE,iCACE,6BAECA,EAAOC,SAASlE,KAAI,SAAClB,EAASwB,GAC7B,OACE,yBAAKiC,IAAKjC,GACR,6CAAmBxB,EAAQ5C,MAC3B,+CAAqB4C,EAAQ4B,OAC7B,+CACmBE,IAAO9B,EAAQ+B,WAAWC,sBA2B1DqD,CAAgB/J,GAChBkB,QAAQC,IAAInB,OE/CRgK,EAhEQ,WAAO,IAAD,EAGvB1K,IADFoB,KAAQoB,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,MAAOpB,EAFI,EAEJA,KAgDvB,OACE,kBAAC,EAAD,CACEc,MAAM,YACNC,YAAW,mBAAcI,EAAd,KACXxB,UAAU,aAEV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAlDjB,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,oCAA9B,oBAIF,wBAAIF,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,mCAA9B,mBAIF,wBAAIF,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,iBAA9B,gBAIF,wBAAIF,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,6BAA9B,uBAgCJ,yBAAKF,UAAU,SArBjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,oBACA,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBAAmBwB,GACjC,wBAAIxB,UAAU,mBAAmByB,GACjC,wBAAIzB,UAAU,mBACF,IAATK,EAAa,QAAU,yBCPvBkD,EAAgB,WAC3B,OAAO/C,MAAM,GAAD,OAAI3B,EAAJ,eAAsB,CAChC4B,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OC4CjB4I,EAtFK,WAAO,IAAD,EACApI,mBAAS,IADT,mBACjBC,EADiB,KACXoI,EADW,OAEMrI,mBAAS,IAFf,mBAEjBsI,EAFiB,KAERC,EAFQ,OAIEvI,oBAAS,GAJX,mBAIjBI,EAJiB,KAIVoI,EAJU,OAKMxI,oBAAS,GALf,mBAKjBK,EALiB,KAKRoI,EALQ,OAQAhL,IAAhBoB,EARgB,EAQhBA,KAAM8I,EARU,EAQVA,MAERnH,EAAe,SAACC,GACpB+H,EAAS,IACTH,EAAQ5H,EAAEC,OAAOC,QAGbC,EAAc,SAACH,GACnBA,EAAEK,iBACF0H,EAAS,IACTD,EAAWtI,GACXwI,GAAW,GDvBe,SAACZ,EAAQF,EAAOjD,GAE5C,OAAOzF,MAAM,GAAD,OAAI3B,EAAJ,8BAA6BuK,GAAU,CACjD3I,OAAQ,OACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,IAG3B1G,KAAMrD,KAAKsD,UAAUwD,KAEpBvF,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GACNH,QAAQC,IAAIE,MCSdkJ,CAAe7J,EAAK2D,IAAKmF,EAAO,CAAE1H,SAAQd,MAAK,SAACiC,GAC1CA,EAAKhB,MACPoI,EAASpH,EAAKhB,QAEdoI,EAAS,IACTH,EAAQ,IACRI,GAAW,QA0CjB,OACE,kBAAC,EAAD,CACE7I,MAAM,qBACNC,YAAW,mBAAchB,EAAKoB,KAAnB,mCAEX,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,wBA1BD,WAClB,GAAI4B,EACF,OAAO,wBAAI5B,UAAU,gBAAgB6J,EAA9B,qBAyBFK,GArBS,WAChB,GAAIvI,EACF,OAAO,wBAAI3B,UAAU,eAAd,0BAoBFmK,GA5CP,0BAAMxC,SAAUxF,GACd,yBAAKnC,UAAU,cACb,2BAAOA,UAAU,cAAjB,QACA,2BACE8C,KAAK,OACL9C,UAAU,eACV6C,SAAUd,EACVG,MAAOV,EACP4I,WAAS,EACTC,UAAQ,KAGZ,4BAAQrK,UAAU,2BAAlB,qBAiBF,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,gBAAtC,0BC8KSsK,EA7OI,WAAO,IAAD,EACK/I,mBAAS,CACnCC,KAAM,GACNJ,YAAa,GACb4E,MAAO,GACPY,WAAY,GACZX,SAAU,GACVsE,SAAU,GACVlE,SAAU,GACVmE,MAAO,GACPxH,SAAS,EACTrB,MAAO,GACP8I,eAAgB,GAChBC,SAAU,KAbW,mBAChB7I,EADgB,KACRC,EADQ,OAgBC9C,IAAhBoB,EAhBe,EAgBfA,KAAM8I,EAhBS,EAgBTA,MAGZ1H,EAWEK,EAXFL,KACAJ,EAUES,EAVFT,YACA4E,EASEnE,EATFmE,MACAY,EAQE/E,EARF+E,WACAX,EAOEpE,EAPFoE,SACAsE,EAME1I,EANF0I,SACAlE,EAKExE,EALFwE,SACArD,EAIEnB,EAJFmB,QACArB,EAGEE,EAHFF,MACA8I,EAEE5I,EAFF4I,eACAC,EACE7I,EADF6I,SAiBFzD,qBAAU,WAZR1D,IAAgB7C,MAAK,SAACiC,GAChBA,EAAKhB,MACPG,EAAU,2BAAKD,GAAN,IAAcF,MAAOgB,EAAKhB,SAGnCG,EAAU,2BAAKD,GAAN,IAAc+E,WAAYjE,EAAM+H,SAAU,IAAIC,iBAS1D,IAEH,IAAM5I,EAAe,SAACC,GAEpB,IAAME,EACc,UAAlBF,EAAEC,OAAOT,KAAmBQ,EAAEC,OAAO2I,MAAM,GAAK5I,EAAEC,OAAOC,MAE3DwI,EAASG,IAAI7I,EAAEC,OAAOT,KAAMU,GAC5BJ,EAAU,2BAAKD,GAAN,kBAAeG,EAAEC,OAAOT,KAAOU,MAGpCC,EAAc,SAACC,GACnBA,EAAMC,iBACNP,EAAU,2BAAKD,GAAN,IAAcF,MAAO,GAAIqB,SAAS,KF7ClB,SAACoG,EAAQF,EAAO9E,GAE3C,OAAO5D,MAAM,GAAD,OAAI3B,EAAJ,4BAA2BuK,GAAU,CAC/C3I,OAAQ,OACR6B,QAAS,CACPC,OAAQ,mBACR8G,cAAc,UAAD,OAAYH,IAG3B1G,KAAM4B,IAEL1D,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GACNH,QAAQC,IAAIE,MEgCd+J,CAAc1K,EAAK2D,IAAKmF,EAAOwB,GAAUhK,MAAK,SAACiC,GACzCA,EAAKhB,MAEPG,EAAU,2BAAKD,GAAN,IAAcF,MAAOgB,EAAKhB,SAEnCG,EAAU,2BACLD,GADI,IAEPL,KAAM,GACNJ,YAAa,GACboJ,MAAO,GACPxE,MAAO,GACPC,SAAU,GACVsE,SAAU,GACVlE,SAAU,GACVrD,SAAS,EACTyH,eAAgB9H,EAAKnB,KACrBkJ,SAAU,IAAIC,gBA4ItB,OACE,kBAAC,EAAD,CACExJ,MAAM,oBACNC,YAAW,mBAAchB,EAAKoB,KAAnB,kCAEX,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,wBApBnBgD,GACE,6BAAShD,UAAU,uBACjB,2CAXJ,6BACEA,UAAU,mBACVC,MAAO,CAAE2C,QAAS6H,EAAiB,GAAK,SAExC,sCAAQA,GAAR,uBAbF,6BACEzK,UAAU,qBACVC,MAAO,CAAE2C,QAASjB,EAAQ,GAAK,SAE9BA,GAzGH,0BAAM3B,UAAU,OAAO2H,SAAUxF,GAE/B,0CAEA,yBAAKnC,UAAU,cACb,2BAAOA,UAAU,qBACf,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,OACLtB,KAAK,QACLuJ,OAAO,cAKb,yBAAK/K,UAAU,cACb,2BAAOA,UAAU,cAAjB,gBACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,OACL9C,UAAU,eACVwB,KAAK,OACLU,MAAOV,KAIX,yBAAKxB,UAAU,cACb,2BAAOA,UAAU,cAAjB,eACA,8BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVwB,KAAK,cACLU,MAAOd,KAIX,yBAAKpB,UAAU,cACb,2BAAOA,UAAU,cAAjB,SACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,OACL9C,UAAU,eACVwB,KAAK,QACLU,MAAO8D,KAIX,yBAAKhG,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,4BACEwB,KAAK,WACLqB,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVkC,MAAO+D,GAEP,iDAMCW,GACCA,EAAWtB,KAAI,SAACsC,EAAGhC,GAAJ,OACb,4BAAQiC,IAAKjC,EAAG1D,MAAO0F,EAAE7D,KACtB6D,EAAEpG,WAMb,yBAAKxB,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,4BACEwB,KAAK,WACLqB,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVkC,MAAOqI,GAEP,iDACA,4BAAQrI,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SAIJ,yBAAKlC,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,SACL9C,UAAU,eACVwB,KAAK,WACLU,MAAOmE,KAIX,4BAAQrG,UAAU,2BAAlB,mBA+BF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,gBAAtC,0B,QC3KSgL,EA5CE,SAAC,GAAmC,IAAjCpE,EAAgC,EAAhCA,WAAYqE,EAAoB,EAApBA,cAAoB,EACpB1J,mBAAS,IADW,mBAC3C2J,EAD2C,KAClCC,EADkC,KAG5CC,EAAe,SAACxD,GAAD,OAAO,WAG1B,IAAMyD,EAAoBH,EAAQI,QAAQ1D,GAEpC2D,EAAoB,YAAOL,IAGN,IAAvBG,EACFE,EAAqBtK,KAAK2G,GAE1B2D,EAAqB/E,OAAO6E,EAAmB,GAGjDF,EAAWI,GAGXN,EAAcM,KAMhB,OAAO3E,EAAWtB,KAAI,SAACsC,EAAGhC,GAAJ,OACpB,wBAAIiC,IAAKjC,EAAG5F,UAAU,iBACpB,2BACE6C,SAAUuI,EAAaxD,EAAE7D,KAMzB7B,MAAOgJ,EAAQI,SAAmB,IAAX1D,EAAE7D,KACzBjB,KAAK,WACL9C,UAAU,qBAEZ,2BAAOA,UAAU,oBAAoB4H,EAAEpG,WCf9BgK,EAxBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQR,EAAoB,EAApBA,cACpBlJ,EAAe,SAACK,GACpB6I,EAAc7I,EAAMH,OAAOC,QAK7B,OAAOuJ,EAAOnG,KAAI,SAACC,EAAGK,GAAJ,OAChB,6BAASiC,IAAKjC,GACZ,2BACE/C,SAAUd,EAGVG,MAAK,UAAKqD,EAAExB,KAEZvC,KAAM+D,EACNzC,KAAK,QACL9C,UAAU,cAEZ,2BAAOA,UAAU,oBAAoBuF,EAAE/D,WCrBhCiK,EAAS,CACpB,CACE1H,IAAK,EACLvC,KAAM,MACNkK,MAAO,IAET,CACE3H,IAAK,EACLvC,KAAM,WACNkK,MAAO,CAAC,EAAG,IAEb,CACE3H,IAAK,EACLvC,KAAM,aACNkK,MAAO,CAAC,GAAI,KAEd,CACE3H,IAAK,EACLvC,KAAM,aACNkK,MAAO,CAAC,GAAI,KAEd,CACE3H,IAAK,EACLvC,KAAM,aACNkK,MAAO,CAAC,GAAI,KAEd,CACE3H,IAAK,EACLvC,KAAM,aACNkK,MAAO,CAAC,GAAI,MCmKDC,EAtLF,WAAM,MAEmBpK,mBAAS,IAF5B,mBAEVqF,EAFU,KAEEgF,EAFF,OAGDrK,mBAAS,GAAlBmC,EAHU,sBAIOnC,mBAAS,GAJhB,mBAIVkC,EAJU,KAIJoI,EAJI,OAMOtK,mBAAS,GANhB,mBAMVuK,EANU,KAMJC,EANI,OAO6BxK,mBAAS,IAPtC,mBAOVyK,EAPU,KAOOC,EAPP,OAQiB1K,mBAAS,CAEzCoC,QAAS,CAAEsC,SAAU,GAAID,MAAO,MAVjB,mBAQVkG,EARU,KAQCC,EARD,KAejBlF,qBAAU,WACRkC,IACAiD,EAAoB3I,EAAMC,EAAOwI,EAAUvI,WAC1C,IAEH,IAAMwF,EAAO,WACX5F,IAAgB7C,MAAK,SAACiC,GAChBA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjBiK,EAAcjJ,OAMd0J,EAAW,WAGf,IAAIC,EAAS7I,EAAOC,EAIpBF,EAAoB8I,EAAQ5I,EAAOwI,EAAUvI,SAASjD,MAAK,SAACiC,GACtDA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,QAGjBsK,EAAmB,GAAD,mBAAKD,GAAL,YAAyBrJ,EAAKA,QAEhDoJ,EAAQpJ,EAAKmJ,MAEbD,EAAQS,QAkBRF,EAAsB,SAACG,GAE3B/I,EAAoBC,EAAMC,EAAO6I,GAAY7L,MAAK,SAACiC,GAC7CA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,QAEjBsK,EAAmBtJ,EAAKA,MAExBoJ,EAAQpJ,EAAKmJ,MAEbD,EAAQ,QAORZ,EAAgB,SAACtH,EAAS6I,GAE9B,IAAMD,EAAU,eAAQL,GAMxB,GAFAK,EAAW5I,QAAQ6I,GAAY7I,EAEd,UAAb6I,EAAsB,CAExB,IAAIC,EAAcC,EAAY/I,GAK9B4I,EAAW5I,QAAQ6I,GAAYC,EAGjCL,EAAoBF,EAAUvI,SAE9BwI,EAAaI,IAITG,EAAc,SAACxK,GAEnB,IAAMS,EAAO8I,EACTC,EAAQ,GAOZ,IAAK,IAAI7D,KAAOlF,EACVA,EAAKkF,GAAK9D,MAAQ4I,SAASzK,KAG7BwJ,EAAQ/I,EAAKkF,GAAK6D,OAItB,OAAOA,GAKT,OACE,kBAAC,EAAD,CACEvK,MAAM,YACNC,YAAY,uCACZpB,UAAU,mBAEV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,oDACA,4BACE,kBAAC,EAAD,CACE4G,WAAYA,EAIZqE,cAAe,SAACtH,GAAD,OAAasH,EAActH,EAAS,gBAIvD,qDAEA,6BACE,kBAAC,EAAD,CAEE8H,OAAQA,EAIRR,cAAe,SAACtH,GAAD,OAAasH,EAActH,EAAS,cAKzD,yBAAK3D,UAAU,SACb,wBAAIA,UAAU,QAAd,YACA,yBAAKA,UAAU,OAIZgM,EAAgB1G,KAAI,SAAClB,EAASwB,GAAV,OACnB,yBAAKiC,IAAKjC,EAAG5F,UAAU,cACrB,kBAAC,EAAD,CAAMoE,QAASA,SAIrB,6BAvHJ0H,EAAO,GACPA,GAAQpI,GACN,4BAAQnD,QAAS8L,EAAUrM,UAAU,yBAArC,iBCCO4M,EAjEC,SAAC/D,GAAW,IAAD,EACKtH,mBAAS,IADd,mBAClB6C,EADkB,KACTyI,EADS,OAEmBtL,mBAAS,IAF5B,mBAElBuL,EAFkB,KAEFC,EAFE,KAIzB9F,qBAAU,WAER,IAAMtB,EAAYkD,EAAMmE,MAAM3F,OAAO1B,UACrCsH,EAAkBtH,KAGjB,CAACkD,IAEJ,IAAMoE,EAAoB,SAACtH,IjBiDT,SAACA,GACnB,OAAOnF,MAAM,GAAD,OAAI3B,EAAJ,qBAAoB8G,GAAa,CAC3ClF,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OiBvD5BmM,CAAKvH,GAAWjF,MAAK,SAACiC,GAChBA,EAAKhB,QAGPkL,EAAWlK,GjBsDQ,SAACgD,GAC1B,OAAOnF,MAAM,GAAD,OAAI3B,EAAJ,6BAA4B8G,GAAa,CACnDlF,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MiB3DxBoM,CAAYxK,EAAKoB,KACdrD,MAAK,SAACiC,GACHA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjBoL,EAAkBpK,WAO5B,OACE,kBAAC,EAAD,CACExB,MAAOiD,GAAWA,EAAQ5C,KAC1BJ,YAEEgD,GAAWA,EAAQhD,aAAegD,EAAQhD,YAAY2E,UAAU,EAAG,KAErE/F,UAAU,mBAEV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAGXoE,GAAWA,EAAQhD,aACjB,kBAAC,EAAD,CAAMgD,QAASA,EAASC,uBAAuB,KAIrD,yBAAKrE,UAAU,SACb,gDAIC8M,EAAexH,KAAI,SAACC,EAAGK,GAAJ,OAClB,yBAAK5F,UAAU,QACb,kBAAC,EAAD,CAAM6H,IAAKjC,EAAGxB,QAASmB,Y,iBC8ItB6H,EA5LE,SAAC,GAIX,IAHL5D,EAGI,EAHJA,SAGI,IAFJ/E,cAEI,MAFK,SAACC,GAAD,OAAOA,GAEZ,MADJC,WACI,WADEC,EACF,IACoBrD,mBAAS,CAC/BK,SAAS,EACTyL,YAAa,KACb1L,MAAO,GACP2L,SAAU,GACVC,QAAS,KANP,mBACG5K,EADH,KACSqE,EADT,KAUEoC,EAASpK,KAAqBA,IAAkBoB,KAAK2D,IACrDmF,EAAQlK,KAAqBA,IAAkBkK,MAE/CsE,EAAW,SAACpE,EAAQF,IlBuDW,SAACE,EAAQF,GAC9C,OAAO1I,MAAM,GAAD,OAAI3B,EAAJ,+BAA8BuK,GAAU,CAClD3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,MAG1BxI,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OkBlE5B0M,CAAwBrE,EAAQF,GAAOxI,MAAK,SAACyG,GACvCA,EAAaxF,MACfqF,EAAQ,2BAAKrE,GAAN,IAAYhB,MAAOwF,EAAaxF,SAEvCqF,EAAQ,2BAAKrE,GAAN,IAAY0K,YAAalG,EAAakG,mBAKnDpG,qBAAU,WACRuG,EAASpE,EAAQF,KAChB,IAEH,IA8HmBvH,EAUEC,EAxIf8L,EAAgB,SAACtL,GACrB4E,EAAQ,2BAAKrE,GAAN,IAAY4K,QAASnL,EAAMH,OAAOC,UAGrCyL,EAAW,WAEf,OAAOnE,EAASoE,QAAO,SAACC,EAAaC,GAKnC,OAAOD,EAAcC,EAAU/I,MAAQ+I,EAAU9H,QAChD,IAGC+H,EAAM,WAKKpL,EAAK2K,SACjBU,uBACAtN,MAAK,SAACyG,GAWL,IAAM8G,EAAc,CAClBC,mBAFM/G,EAAagH,MAGnBC,OAAQT,MlBqBY,SAACvE,EAAQF,EAAO+E,GAC5C,OAAOzN,MAAM,GAAD,OAAI3B,EAAJ,8BAA6BuK,GAAU,CACjD3I,OAAQ,OACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,IAE3B1G,KAAMrD,KAAKsD,UAAUwL,KAEpBvN,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OkB/BxBsN,CAAejF,EAAQF,EAAO+E,GAC3BvN,MAAK,SAACC,GACL,IAAM2N,EAAkB,CACtB9E,SAAUA,EACV+E,eAAgB5N,EAAS6N,YAAYhJ,GACrC4I,OAAQzN,EAAS6N,YAAYJ,OAC7Bb,QAAS5K,EAAK4K,UlB4BD,SAACnE,EAAQF,EAAOoF,GAClC9N,MAAM,GAAD,OAAI3B,EAAJ,0BAAyBuK,GAAU,CAC7C3I,OAAQ,OACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,IAE3B1G,KAAMrD,KAAKsD,UAAU,CAAEgM,MAAOH,MAE7B5N,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MkBrCpB2N,CAAYtF,EAAQF,EAAOoF,GAK3BhP,GAAU,WAERmF,GAAQE,GACRqC,EAAQ,2BAAKrE,GAAN,IAAYf,SAAS,WAG/Bd,OAAM,SAACa,GACNf,QAAQC,IAAIc,SAGjBb,OAAM,SAACa,GAENqF,EAAQ,2BAAKrE,GAAN,IAAYhB,MAAOA,EAAMgN,eAkFtC,OACE,6BACE,sCAAYhB,MAbK/L,EAcJe,EAAKf,QAbpB,6BACE5B,UAAU,mBAEVC,MAAO,CAAE2C,QAAShB,EAAU,GAAK,SAHnC,0CAXiBD,EAyBJgB,EAAKhB,MAxBlB,6BACE3B,UAAU,qBAEVC,MAAO,CAAE2C,QAASjB,EAAQ,GAAK,SAE9BA,IAfI3C,IACL,6BA7CF,6BAEE4P,OAAQ,kBAAM5H,EAAQ,2BAAKrE,GAAN,IAAYhB,MAAO,OAExCpB,QAAS,kBAAMyG,EAAQ,2BAAKrE,GAAN,IAAYhB,MAAO,QAGnB,OAArBgB,EAAK0K,aAAwB7D,EAASrJ,OAAS,EAC9C,6BACE,yBAAKH,UAAU,mBACb,2BAAOA,UAAU,cAAjB,qBACA,8BACE6C,SAAU6K,EACV1N,UAAU,eACVkC,MAAOS,EAAK4K,QACZzF,YAAY,wCAKhB,kBAAC,IAAD,CACE+G,QAAS,CACPC,cAAenM,EAAK0K,YAEpB0B,OAAQ,CACNC,KAAM,UAIVC,WAAY,SAAC3B,GAAD,OAAe3K,EAAK2K,SAAWA,KAE7C,4BAEE/M,QAASwN,EACT/N,UAAU,6BAHZ,QAQA,OAQJ,kBAAC,IAAD,CAAME,GAAG,WACP,4BAAQF,UAAU,mBAAlB,0BC9FOkP,EAlEF,WAAM,MAEQ3N,mBAAS,IAFjB,mBAEV4N,EAFU,KAEHhM,EAFG,OAIK5B,oBAAS,GAJd,mBAIVoD,EAJU,KAILF,EAJK,KAMjBwC,qBAAU,WACR9D,ExBiCElE,aAAaI,QAAQ,QAEhBF,KAAKC,MAAMH,aAAaI,QAAQ,SAGlC,MwBpCJ,CAACsF,IAgCJ,OACE,kBAAC,EAAD,CACExD,MAAM,gBACNC,YAAY,mEACZpB,UAAU,mBAEV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACZmP,EAAMhP,OAAS,EAtCN,SAACgP,GACjB,OACE,6BACE,uDAAsBA,EAAMhP,QAA5B,UACA,6BAGCgP,EAAM7J,KAAI,SAAClB,EAASwB,GAAV,OACT,kBAAC,EAAD,CACEiC,IAAKjC,EACLxB,QAASA,EACTE,qBAAqB,EACrBC,YAAY,EACZC,yBAAyB,EACzBC,OAAQA,EACRE,IAAKA,QAuBayK,CAAUD,GAfpC,kDAEE,6BACA,kBAAC,IAAD,CAAMjP,GAAG,SAAT,wBAeE,yBAAKF,UAAU,SACb,wBAAIA,UAAU,QAAd,qBACA,6BACA,kBAAC,EAAD,CACEwJ,SAAU2F,EACV1K,OAAQA,EACRE,IAAKA,QCuGF0K,EA7JA,WAAO,IAAD,EACS9N,mBAAS,IADlB,mBACZgI,EADY,KACJ+F,EADI,OAGqB/N,mBAAS,IAH9B,mBAGZgO,EAHY,KAGEC,EAHF,OAKKxQ,IAAhBoB,EALW,EAKXA,KAAM8I,EALK,EAKLA,MAGRuG,EAAa,YVgCK,SAACrG,EAAQF,GACjC,OAAO1I,MAAM,GAAD,OAAI3B,EAAJ,wBAAuBuK,GAAU,CAC3C3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR8G,cAAc,UAAD,OAAYH,MAG1BxI,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OU1C5B2O,CAAWtP,EAAK2D,IAAKmF,GAAOxI,MAAK,SAACiC,GAC5BA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjB2N,EAAU3M,OAKVgN,EAAmB,YVqCI,SAACvG,EAAQF,GACtC,OAAO1I,MAAM,GAAD,OAAI3B,EAAJ,iCAAgCuK,GAAU,CACpD3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR8G,cAAc,UAAD,OAAYH,MAG1BxI,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OU9C5B6O,CAAgBxP,EAAK2D,IAAKmF,GAAOxI,MAAK,SAACiC,GACjCA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjB6N,EAAgB7M,OAKtBsE,qBAAU,WACRwI,IACAE,MACC,IAEH,IAUME,EAAY,SAACrO,EAAMU,GAAP,OAChB,yBAAKlC,UAAU,4BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBAAoBwB,GACnC,2BAAOsB,KAAK,OAAOZ,MAAOA,EAAOlC,UAAU,eAAe8P,UAAQ,OAMlEC,EAAqB,SAAC3N,EAAO4N,IVeJ,SAAC5G,EAAQF,EAAO8G,EAASC,GACxD,OAAOzP,MAAM,GAAD,OAAI3B,EAAJ,mBAAkBmR,EAAlB,mBAAoC5G,GAAU,CACxD3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,IAE3B1G,KAAMrD,KAAKsD,UAAU,CAAEwN,SAAQD,cAE9BtP,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OU3B5BmP,CAAkB9P,EAAK2D,IAAKmF,EAAO8G,EAAS5N,EAAMH,OAAOC,OAAOxB,MAC9D,SAACiC,GACKA,EAAKhB,MACPf,QAAQC,IAAI,wBAEZ4O,QA6BR,OACE,kBAAC,EAAD,CACEtO,MAAM,gBACNC,YAAW,mBAAchB,EAAKoB,KAAnB,0CAEX,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,wBA5DfuJ,EAAOpJ,OAAS,EAEhB,wBAAIH,UAAU,oBAAd,iBAAgDuJ,EAAOpJ,QAGlD,wBAAIH,UAAU,eAAd,aA4DFuJ,EAAOjE,KAAI,SAACmJ,EAAO7I,GAClB,OACE,yBACE5F,UAAU,OACV6H,IAAKjC,EACL3F,MAAO,CAAEkQ,aAAc,qBAEvB,wBAAInQ,UAAU,QACZ,0BAAMC,MAAO,CAAEmQ,gBAAiB,YAAhC,aACa3B,EAAM1K,MAIrB,wBAAI/D,UAAU,mBACZ,wBAAIA,UAAU,mBA/CX,SAACyO,GAAD,OACjB,yBAAKzO,UAAU,cACb,wBAAIA,UAAU,aAAd,WAAmCyO,EAAMwB,QACzC,4BACEjQ,UAAU,eAEV6C,SAAU,SAACb,GAAD,OAAO+N,EAAmB/N,EAAGyM,EAAM1K,OAG7C,iDAGCwL,EAAajK,KAAI,SAAC2K,EAAQrK,GAAT,OAChB,4BAAQiC,IAAKjC,EAAG1D,MAAO+N,GACpBA,QAiCsCI,CAAW5B,IAC5C,wBAAIzO,UAAU,mBAAd,mBACmByO,EAAMF,gBAEzB,wBAAIvO,UAAU,mBAAd,YAA0CyO,EAAML,QAChD,wBAAIpO,UAAU,mBAAd,eACeyO,EAAMrO,KAAKoB,MAE1B,wBAAIxB,UAAU,mBAAd,eACekG,IAAOuI,EAAMtI,WAAWC,WAEvC,wBAAIpG,UAAU,mBAAd,qBACqByO,EAAMlB,UAI7B,wBAAIvN,UAAU,yBAAd,gCACgCyO,EAAMjF,SAASrJ,QAK9CsO,EAAMjF,SAASlE,KAAI,SAAClB,EAASwB,GAAV,OAClB,yBACE5F,UAAU,OACV6H,IAAKjC,EACL3F,MAAO,CAAEqQ,QAAS,OAAQvI,OAAQ,qBAEjC8H,EAAU,eAAgBzL,EAAQ5C,MAClCqO,EAAU,gBAAiBzL,EAAQ4B,OACnC6J,EAAU,gBAAiBzL,EAAQW,OACnC8K,EAAU,aAAczL,EAAQL,iBC5BtCwM,EAxHC,SAAC,GAAe,IAAbvD,EAAY,EAAZA,MAAY,EACDzL,mBAAS,CACnCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,OAAO,EACPC,SAAS,IANkB,mBACtBC,EADsB,KACdC,EADc,KASrBoH,EAAUlK,IAAVkK,MACA1H,EAA0CK,EAA1CL,KAAMC,EAAoCI,EAApCJ,MAAOC,EAA6BG,EAA7BH,SAAiBE,GAAYC,EAAnBF,MAAmBE,EAAZD,SAEhCuH,EAAO,SAACC,IbjBI,SAACA,EAAQF,GAC3B,OAAO1I,MAAM,GAAD,OAAI3B,EAAJ,iBAAgBuK,GAAU,CACpC3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,MAG1BxI,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OaM5BmM,CAAK9D,EAAQF,GAAOxI,MAAK,SAACiC,GACpBA,EAAKhB,MACPG,EAAU,2BACLD,GADI,IAEPF,OAAO,KAGTG,EAAU,2BAAKD,GAAN,IAAcL,KAAMmB,EAAKnB,KAAMC,MAAOkB,EAAKlB,aAK1DwF,qBAAU,WAERkC,EAAK6D,EAAM3F,OAAO+B,UACjB,IAIH,IAAMrH,EAAe,SAACC,GACpBF,EAAU,2BAAKD,GAAN,gBAAcF,OAAO,GAAQK,EAAEC,OAAOT,KAAOQ,EAAEC,OAAOC,UAG3DC,EAAc,SAACH,GACnBA,EAAEK,iBb1BgB,SAAC+G,EAAQF,EAAO9I,GACpC,OAAOI,MAAM,GAAD,OAAI3B,EAAJ,iBAAgBuK,GAAU,CACpC3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,IAE3B1G,KAAMrD,KAAKsD,UAAUrC,KAEpBM,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MagB5ByP,CAAOxD,EAAM3F,OAAO+B,OAAQF,EAAO,CAAE1H,OAAMC,QAAOC,aAAYhB,MAC5D,SAACiC,GACKA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,ObdD,SAACvB,EAAMb,GAE/B,GAAIN,aAAaI,QAAQ,OAAQ,CAE/B,IAAIoR,EAAOtR,KAAKC,MAAMH,aAAaI,QAAQ,QAE3CoR,EAAKrQ,KAAOA,EAEZnB,aAAaI,QAAQ,MAAOF,KAAKsD,UAAUgO,IAC3ClR,KaSMmR,CAAW/N,GAAM,WAEfb,EAAU,2BACLD,GADI,IAEPL,KAAMmB,EAAKnB,KACXC,MAAOkB,EAAKlB,MACZG,SAAS,YAsDrB,OACE,kBAAC,EAAD,CACET,MAAM,UACNC,YAAY,sBACZpB,UAAU,mBAEV,wBAAIA,UAAU,QAAd,kBA9CkB,SAACwB,EAAMC,EAAOC,GAAd,OACpB,8BACE,6BAAS1B,UAAU,cACjB,2BAAOA,UAAU,cAAjB,QACA,2BACE8C,KAAK,OACLD,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVwB,KAAK,OACLU,MAAOV,KAGX,6BAASxB,UAAU,cACjB,2BAAOA,UAAU,cAAjB,SACA,2BACE8C,KAAK,OACLD,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVwB,KAAK,QACLU,MAAOT,KAGX,6BAASzB,UAAU,cACjB,2BAAOA,UAAU,cAAjB,YACA,2BACE8C,KAAK,OACLD,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVwB,KAAK,WACLU,MAAOR,KAIX,4BAAQnB,QAAS4B,EAAanC,UAAU,mBAAxC,WAcC2Q,CAAcnP,EAAMC,EAAOC,GArDX,SAACE,GACpB,GAAIA,EACF,OAAO,kBAAC,IAAD,CAAU1B,GAAG,UAoDnB0Q,CAAahP,KCnDLiP,EAlEQ,WAAO,IAAD,EACKtP,mBAAS,IADd,mBACpBiI,EADoB,KACVsH,EADU,OAGH9R,IAAhBoB,EAHmB,EAGnBA,KAAM8I,EAHa,EAGbA,MAER6H,EAAe,WZ+FdvQ,MAAM,GAAD,OAAI3B,EAAJ,aAAoB,CAC9B4B,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MYpGdL,MAAK,SAACiC,GACdA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjBmP,EAAYnO,OAKZqO,EAAU,SAACrL,IZ0GU,SAACA,EAAWyD,EAAQF,GAC/C,OAAO1I,MAAM,GAAD,OAAI3B,EAAJ,qBAAoB8G,EAApB,YAAiCyD,GAAU,CACrD3I,OAAQ,SACR6B,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB8G,cAAc,UAAD,OAAYH,MAG1BxI,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OYrH5BkQ,CAActL,EAAWvF,EAAK2D,IAAKmF,GAAOxI,MAAK,SAACiC,GAC1CA,EAAKhB,MACPf,QAAQC,IAAI8B,EAAKhB,OAEjBoP,QAUN,OALA9J,qBAAU,WACR8J,MACC,IAID,kBAAC,EAAD,CACE5P,MAAM,kBACNC,YAAY,2BACZpB,UAAU,mBAEV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,eAAd,SAAmCwJ,EAASrJ,OAA5C,aACA,6BACA,wBAAIH,UAAU,cAEXwJ,EAASlE,KAAI,SAACC,EAAGK,GAAJ,OACZ,wBACEiC,IAAKjC,EACL5F,UAAU,qEAEV,gCAASuF,EAAE/D,MACX,kBAAC,IAAD,CAAMtB,GAAE,2CAAsCqF,EAAExB,MAC9C,0BAAM/D,UAAU,kCAAhB,WAEF,0BACEO,QAAS,kBAAMyQ,EAAQzL,EAAExB,MACzB/D,UAAU,iCAFZ,mBC+NDkR,EA5QO,SAAC,GAAe,IAAblE,EAAY,EAAZA,MAAY,EACPzL,mBAAS,CACnCC,KAAM,GACNJ,YAAa,GACb4E,MAAO,GACPY,WAAY,GACZX,SAAU,GACVsE,SAAU,GACVlE,SAAU,GACVmE,MAAO,GACPxH,SAAS,EACTrB,MAAO,GACP8I,eAAgB,GAChBC,SAAU,KAbuB,mBAC5B7I,EAD4B,KACpBC,EADoB,OAgBX9C,IAAhBoB,EAhB2B,EAgB3BA,KAAM8I,EAhBqB,EAgBrBA,MAGZ1H,EAWEK,EAXFL,KACAJ,EAUES,EAVFT,YACA4E,EASEnE,EATFmE,MACAY,EAQE/E,EARF+E,WACAX,EAOEpE,EAPFoE,SACAsE,EAME1I,EANF0I,SACAlE,EAKExE,EALFwE,SACArD,EAIEnB,EAJFmB,QACArB,EAGEE,EAHFF,MACA8I,EAEE5I,EAFF4I,eACAC,EACE7I,EADF6I,SAGIvB,EAAO,SAACxD,IbwEU,SAACA,GACzB,OAAOnF,MAAM,GAAD,OAAI3B,EAAJ,qBAAoB8G,GAAa,CAC3ClF,OAAQ,QAEPC,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,Oa9E5BoQ,CAAWxL,GAAWjF,MAAK,SAACiC,GACtBA,EAAKhB,MACPG,EAAU,2BAAKD,GAAN,IAAcF,MAAOgB,EAAKhB,UAGnCG,EAAU,2BACLD,GADI,IAEPL,KAAMmB,EAAKnB,KACXJ,YAAauB,EAAKvB,YAClB4E,MAAOrD,EAAKqD,MACZC,SAAUtD,EAAKsD,SAASlC,IACxBwG,SAAU5H,EAAK4H,SACflE,SAAU1D,EAAK0D,SACfqE,SAAU,IAAIC,YAGhByG,SAMAA,EAAiB,WACrB7N,IAAgB7C,MAAK,SAACiC,GAChBA,EAAKhB,MACPG,EAAU,2BAAKD,GAAN,IAAcF,MAAOgB,EAAKhB,SAInCG,EAAU,CAAE8E,WAAYjE,EAAM+H,SAAU,IAAIC,eAQlD1D,qBAAU,WAERkC,EAAK6D,EAAM3F,OAAO1B,aACjB,IAEH,IAAM5D,EAAe,SAACC,GAEpB,IAAME,EACc,UAAlBF,EAAEC,OAAOT,KAAmBQ,EAAEC,OAAO2I,MAAM,GAAK5I,EAAEC,OAAOC,MAE3DwI,EAASG,IAAI7I,EAAEC,OAAOT,KAAMU,GAC5BJ,EAAU,2BAAKD,GAAN,kBAAeG,EAAEC,OAAOT,KAAOU,MAGpCC,EAAc,SAACC,GACnBA,EAAMC,iBACNP,EAAU,2BAAKD,GAAN,IAAcF,MAAO,GAAIqB,SAAS,Kb4ClB,SAAC2C,EAAWyD,EAAQF,EAAO9E,GACtD,OAAO5D,MAAM,GAAD,OAAI3B,EAAJ,qBAAoB8G,EAApB,YAAiCyD,GAAU,CACrD3I,OAAQ,MACR6B,QAAS,CACPC,OAAQ,mBACR8G,cAAc,UAAD,OAAYH,IAE3B1G,KAAM4B,IAEL1D,MAAK,SAACC,GACL,OAAOA,EAAS+B,UAEjB5B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MatD5BsQ,CAAcrE,EAAM3F,OAAO1B,UAAWvF,EAAK2D,IAAKmF,EAAOwB,GAAUhK,MAC/D,SAACiC,GACKA,EAAKhB,MAEPG,EAAU,2BAAKD,GAAN,IAAcF,MAAOgB,EAAKhB,UAEnCG,EAAU,2BACLD,GADI,IAEPL,KAAM,GACNJ,YAAa,GACboJ,MAAO,GACPxE,MAAO,GACPC,SAAU,GACVsE,SAAU,GACVlE,SAAU,GACVrD,SAAS,EACTyH,eAAgB9H,EAAKnB,KACrBkJ,SAAU,IAAIC,YAGhB2G,YAAW,WACTC,OAAO3R,SAAS4R,WACf,WA4IX,OACE,kBAAC,EAAD,CACErQ,MAAM,oBACNC,YAAW,mBAAchB,EAAKoB,KAAnB,kCAEX,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,wBApBnBgD,GACE,6BAAShD,UAAU,uBACjB,2CAXJ,6BACEA,UAAU,mBACVC,MAAO,CAAE2C,QAAS6H,EAAiB,GAAK,SAExC,sCAAQA,GAAR,uBAbF,6BACEzK,UAAU,qBACVC,MAAO,CAAE2C,QAASjB,EAAQ,GAAK,SAE9BA,GAzGH,0BAAM3B,UAAU,OAAO2H,SAAUxF,GAE/B,0CAEA,yBAAKnC,UAAU,cACb,2BAAOA,UAAU,qBACf,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,OACLtB,KAAK,QACLuJ,OAAO,cAKb,yBAAK/K,UAAU,cACb,2BAAOA,UAAU,cAAjB,gBACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,OACL9C,UAAU,eACVwB,KAAK,OACLU,MAAOV,KAIX,yBAAKxB,UAAU,cACb,2BAAOA,UAAU,cAAjB,eACA,8BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVwB,KAAK,cACLU,MAAOd,KAIX,yBAAKpB,UAAU,cACb,2BAAOA,UAAU,cAAjB,SACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,OACL9C,UAAU,eACVwB,KAAK,QACLU,MAAO8D,KAIX,yBAAKhG,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,4BACEwB,KAAK,WACLqB,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVkC,MAAO+D,GAEP,iDAMCW,GACCA,EAAWtB,KAAI,SAACsC,EAAGhC,GAAJ,OACb,4BAAQiC,IAAKjC,EAAG1D,MAAO0F,EAAE7D,KACtB6D,EAAEpG,WAMb,yBAAKxB,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,4BACEwB,KAAK,WACLqB,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9BhC,UAAU,eACVkC,MAAOqI,GAEP,iDACA,4BAAQrI,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SAIJ,yBAAKlC,UAAU,cACb,2BAAOA,UAAU,cAAjB,YACA,2BACE6C,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAC9Bc,KAAK,SACL9C,UAAU,eACVwB,KAAK,WACLU,MAAOmE,KAIX,4BAAQrG,UAAU,2BAAlB,mBA+BF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,gBAAtC,0BCnNSyR,EAxBA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9R,KAAK,IAAI+R,OAAK,EAAChJ,UAAWT,IACjC,kBAAC,IAAD,CAAOtI,KAAK,QAAQ+R,OAAK,EAAChJ,UAAWiD,IACrC,kBAAC,IAAD,CAAOhM,KAAK,UAAU+R,OAAK,EAAChJ,UAAW3F,IACvC,kBAAC,IAAD,CAAOpD,KAAK,UAAU+R,OAAK,EAAChJ,UAAWpH,IACvC,kBAAC,EAAD,CAAc3B,KAAK,kBAAkB+R,OAAK,EAAChJ,UAAWM,IACtD,kBAAC,EAAD,CAAcrJ,KAAK,kCAAkC+R,OAAK,EAAChJ,UAAW6H,IAEtE,kBAAC,EAAD,CAAY5Q,KAAK,mBAAmB+R,OAAK,EAAChJ,UAAWgB,IACrD,kBAAC,EAAD,CAAY/J,KAAK,4BAA4B+R,OAAK,EAAChJ,UAAWmI,IAC9D,kBAAC,EAAD,CAAYlR,KAAK,8CAA8C+R,OAAK,EAAChJ,UAAWwI,IAChF,kBAAC,EAAD,CAAYvR,KAAK,mCAAmC+R,OAAK,EAAChJ,UAAWiB,IACrE,kBAAC,EAAD,CAAYhK,KAAK,kCAAkC+R,OAAK,EAAChJ,UAAW4B,IACpE,kBAAC,IAAD,CAAO3K,KAAK,uBAAuB+R,OAAK,EAAChJ,UAAWkE,IACpD,kBAAC,IAAD,CAAOjN,KAAK,QAAQ+R,OAAK,EAAChJ,UAAWwG,IACrC,kBAAC,IAAD,CAAOvP,KAAK,gBAAgB+R,OAAK,EAAChJ,UAAW2G,OCnCrDsC,IAAS/I,OAAO,kBAAC,EAAD,MAAYgJ,SAASC,eAAe,W","file":"static/js/main.a935978c.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;\n","import { API } from '../../config';\n\nexport const signup = (user) => {\n  // console.log(name, email, password);\n  return fetch(`${API}/auth/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    //convert 'user' object into json string\n    body: JSON.stringify(user),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const signin = (user) => {\n  // console.log(name, email, password);\n  return fetch(`${API}/auth/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    //convert 'user' object into json string\n    body: JSON.stringify(user),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n//middleware\nexport const authenticate = (data, next) => {\n  //if local storage does not have a 'jwt' then fill it up\n  if (!localStorage.jwt) {\n    localStorage.setItem('jwt', JSON.stringify(data));\n    //pass the control onto the next middleware\n    next();\n  }\n};\n\nexport const signout = (next) => {\n  //if the local storage item 'jwt' exist then... wipe it clear\n  if (localStorage.jwt) {\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('cart');\n    //pass the control onto the next middleware\n    next();\n    return fetch(`${API}/auth/signout`, {\n      method: 'GET',\n    })\n      .then((response) => {\n        console.log('signout', response);\n      })\n      .catch((err) => console.log(err));\n  }\n};\n\nexport const isAuthenticated = () => {\n  if (!localStorage.jwt) {\n    return false;\n  } else if (localStorage.jwt) {\n    // console.log(JSON.parse(localStorage.getItem('jwt')));\n    //sends back the data so that we can use it for other things later on in the front-end\n    return JSON.parse(localStorage.getItem('jwt'));\n  }\n};\n","//add products to the local storage and prevent duplicate products\nexport const addItem = (item, next) => {\n  let cart = [];\n\n  //if 'cart' exist in the local storage then assign it here\n  if (localStorage.getItem('cart')) {\n    //convert json file to object so that we can add new values to it\n    cart = JSON.parse(localStorage.getItem('cart'));\n  }\n\n  //push all new products onto the cart array\n  cart.push({\n    ...item,\n    //by default the amount of items per prodcut in the cart is 1\n    count: 1,\n  });\n\n  //this is to remove duplicate products if there were any coming from the 'item' prop\n  //'new set' will only allow unique values in its newly created array and ignore duplicate values\n  //create a new array and loop through every product to get their id\n  //map through that newly created array again\n  cart = Array.from(new Set(cart.map((p) => p._id))).map((id) => {\n    /*With the newly created array of Id's, map through them again but this time for every Id \n    that equals the the array of Id's return them and don't compare the the same ones again*/\n    //this prevents duplicate id's\n    return cart.find((p) => p._id === id);\n  });\n\n  //store new values in local storage by turning the object to a json file\n  localStorage.setItem('cart', JSON.stringify(cart));\n  next();\n};\n\n// get data of total item in cart\nexport const itemTotal = () => {\n  //if 'cart' exist in local storage\n  if (localStorage.getItem('cart')) {\n    //turn json into object\n    return JSON.parse(localStorage.getItem('cart')).length;\n  }\n  //if there is zero item in the cart zero\n  return 0;\n};\n\n// get all data from the cart in local storage\nexport const getCart = () => {\n  //if 'cart' exist in local storage\n  if (localStorage.getItem('cart')) {\n    //turn json into object\n    return JSON.parse(localStorage.getItem('cart'));\n  }\n  //if there is zero item in the cart return an empty array\n  return [];\n};\n\nexport const updateItem = (productId, count) => {\n  let cart = [];\n  //if 'cart' exist in local storage\n  if (localStorage.getItem('cart')) {\n    //turn json into object\n    cart = JSON.parse(localStorage.getItem('cart'));\n  }\n\n  cart.map((product, i) => {\n    // search through the local storage cart for the product with matching id of the one sent through the parameter\n    if (product._id === productId) {\n      //update that products count\n      //find the index of where that product lies and update it's count with the count passed through the parameter\n      cart[i].count = count;\n    }\n  });\n  //store the new data in local storage\n  localStorage.setItem('cart', JSON.stringify(cart));\n};\n\nexport const removeItem = (productId) => {\n  let cart = [];\n  //if 'cart' exist in local storage\n  if (localStorage.getItem('cart')) {\n    //turn json into object\n    cart = JSON.parse(localStorage.getItem('cart'));\n  }\n\n  cart.map((product, i) => {\n    // search through the local storage cart for the product with matching id of the one sent through the parameter\n    if (product._id === productId) {\n      //removing the product located\n      //get the current index and remove the product based there\n      cart.splice(i, 1);\n    }\n  });\n  //store the new data in local storage\n  localStorage.setItem('cart', JSON.stringify(cart));\n  //return the updated array to be used to udpate the UI\n  return cart;\n};\n\n//\n\nexport const emptyCart = (next) => {\n  localStorage.removeItem('cart');\n  next();\n};\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { signout, isAuthenticated } from '../../actions/auth/index';\nimport { itemTotal } from '../../actions/core/cartHelpers';\n\n//to be able to highlight the current active class of the Link element(current navigation bar tab)\n/*'history' is the entire index history of the webpage routes(the routes loaded and used), while\n'path' is the current route passed in by the user, so if the current latest 'history' route matches\nthe desired route passed into 'path' by the user, then do...*/\nconst isActive = (history, path) => {\n  if (history.location.pathname === path) {\n    return { color: '#ff9900' };\n  } else {\n    return { color: '#ffffff' };\n  }\n};\n\n//'history' comes from props.history\nconst Menu = ({ history }) => (\n  <div>\n    <ul className='nav nav-tabs bg-primary'>\n      {/* ----------------- */}\n      <li className='nav-item'>\n        <Link className='nav-link' style={isActive(history, '/')} to='/'>\n          Home\n        </Link>\n      </li>\n\n      <li className='nav-item'>\n        <Link\n          className='nav-link'\n          style={isActive(history, '/shop')}\n          to='/shop'\n        >\n          Shop\n        </Link>\n      </li>\n\n      <li className='nav-item'>\n        <Link\n          className='nav-link'\n          style={isActive(history, '/cart')}\n          to={isAuthenticated() ? '/cart' : '/signup'}\n        >\n          Cart {/* superscript */}\n          <sup>\n            <small className='cart-badge'>{itemTotal()}</small>\n          </sup>\n        </Link>\n      </li>\n\n      {/* if user is authenticated, THEN if use is authenticated with the role of zero THEN do  */}\n      {isAuthenticated() && isAuthenticated().user.role === 0 && (\n        <li className='nav-item'>\n          <Link\n            className='nav-link'\n            style={isActive(history, '/user/dashboard')}\n            to='/user/dashboard'\n          >\n            Dashboard\n          </Link>\n        </li>\n      )}\n      {/* if user is authenticated, THEN if use is authenticated with the role of one THEN do  */}\n      {isAuthenticated() && isAuthenticated().user.role === 1 && (\n        <li className='nav-item'>\n          <Link\n            className='nav-link'\n            style={isActive(history, '/admin/dashboard')}\n            to='/admin/dashboard'\n          >\n            Dashboard\n          </Link>\n        </li>\n      )}\n\n      {/* if user is not authenticated is true, THEN do... */}\n      {!isAuthenticated() && (\n        <>\n          <li>\n            <Link\n              className='nav-link'\n              style={isActive(history, '/signin')}\n              to='/signin'\n            >\n              Signin\n            </Link>\n          </li>\n\n          <li>\n            <Link\n              className='nav-link'\n              style={isActive(history, '/signup')}\n              to='/signup'\n            >\n              Signup\n            </Link>\n          </li>\n        </>\n      )}\n\n      {isAuthenticated() && (\n        <li className='nav-item'>\n          <span\n            className='nav-link'\n            style={{ cursor: 'pointer', color: '#ffffff' }}\n            onClick={() =>\n              signout(() => {\n                history.push('/');\n              })\n            }\n          >\n            Signout\n          </span>\n        </li>\n      )}\n      {/* ----------------- */}\n    </ul>\n  </div>\n);\n//'withRouter' allows you to work with history Object like 'history.push'\nexport default withRouter(Menu);\n","import React from 'react';\nimport Menu from './Menu';\nimport '../../styles.css'\n//if we don't get any of these props, it will be set to its default value\nconst Layout = ({\n  title = 'Title',\n  description = 'Description',\n  className,\n  children,\n}) => (\n  //These are recyclable and can be reused for other page routes\n  <section>\n    <Menu />\n    <div className='jumbotron'>\n      <h2>{title}</h2>\n      <p className='lead'>{description}</p>\n    </div>\n\n    <div className={className}>{children}</div>\n  </section>\n);\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport {signup} from '../../actions/auth/index'\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    success: false,\n  });\n\n  //=================================================\n  const { name, email, password, success, error } = values;\n\n  const handleChange = (e) => {\n    //hide errors if there are any\n    setValues({ ...values, error: false, [e.target.name]: e.target.value });\n  };\n\n\n  const clickSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    //pass in the values as an object\n    signup({ name, email, password }).then((data) => {\n      //makes sure 'error' specifically is returned and not 'err' or anything else from the backend\n      if (data.error) {\n        setValues({ ...values, error: data.error, success: false });\n      } else {\n        setValues({\n          ...values,\n          name: '',\n          email: '',\n          password: '',\n          error: '',\n          success: true,\n        });\n      }\n    });\n  };\n\n  //\n  const signUpForm = () => (\n    <form>\n      <div className='form-group'>\n        <label className='text-muted'>Name</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='text'\n          className='form-control'\n          name='name'\n          value={name}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Email</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='email'\n          className='form-control'\n          name='email'\n          value={email}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Password</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='password'\n          className='form-control'\n          name='password'\n          value={password}\n        />\n      </div>\n\n      <button onClick={clickSubmit} className='btn btn-primary'>\n        Submit\n      </button>\n    </form>\n  );\n\n  const showError = () => (\n    <div\n      className='alert alert-danger'\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </div>\n  );\n\n  const showSuccess = () => (\n    <div\n      className='alert alert-info'\n      style={{ display: success ? '' : 'none' }}\n    >\n      New account has been created. Please <Link to='/signin'>Signin</Link>\n    </div>\n  );\n\n  return (\n    <Layout\n      title='Signup'\n      description='Signup to Node React E-commerce App'\n      className='container col-md-8 offset-md-2'\n    >\n      {showSuccess()}\n      {showError()}\n      {/* this is considered to be the 'children' props */}\n      {signUpForm()}\n    </Layout>\n  );\n  //\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport {\n  signin,\n  authenticate,\n  isAuthenticated,\n} from '../../actions/auth/index';\nimport { emptyCart } from '../../actions/core/cartHelpers';\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n    error: '',\n    loading: false,\n    redirectToReferrer: false,\n  });\n\n  //=================================================\n  const { email, password, loading, error, redirectToReferrer } = values;\n  const { user } = isAuthenticated();\n\n  const handleChange = (e) => {\n    //hide errors if there are any\n    setValues({ ...values, error: false, [e.target.name]: e.target.value });\n  };\n\n  const clickSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    //pass in the values as an object\n    signin({ email, password }).then((data) => {\n      //makes sure 'error' specifically is returned and not 'err' or anything else from the backend\n      if (data.error) {\n        setValues({ ...values, error: data.error, loading: false });\n      } else {\n        //make use of the data sent back and store it in local storage\n        authenticate(data, () => {\n          emptyCart(() => {\n            setValues({\n              ...values,\n              redirectToReferrer: true,\n            });\n          });\n        });\n      }\n    });\n  };\n\n  //\n  const signinForm = () => (\n    <form>\n      <div className='form-group'>\n        <label className='text-muted'>Email</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='email'\n          className='form-control'\n          name='email'\n          value={email}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Password</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='password'\n          className='form-control'\n          name='password'\n          value={password}\n        />\n      </div>\n\n      <button onClick={clickSubmit} className='btn btn-primary'>\n        Submit\n      </button>\n    </form>\n  );\n\n  const showError = () => (\n    <div\n      className='alert alert-danger'\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </div>\n  );\n\n  //if loading is true THEN do...\n  const showLoading = () =>\n    loading && (\n      <div className='alert alert-info'>\n        <h2>Loading...</h2>\n      </div>\n    );\n\n  const redirectUser = () => {\n    //if user clicked submit to sign in\n    if (redirectToReferrer) {\n      if (user && user.role === 1) {\n        return <Redirect to='/admin/dashboard' />;\n      } else {\n        return <Redirect to='/user/dashboard' />;\n      }\n    }\n    //if user is already authenticated but try to use admin route eventhough they are regular user, then be redirected to home page\n    if (isAuthenticated()) {\n      return <Redirect to='/' />;\n    }\n  };\n\n  return (\n    <Layout\n      title='Signin'\n      description='Signin to Node React E-commerce App'\n      className='container col-md-8 offset-md-2'\n    >\n      {showLoading()}\n      {redirectUser()}\n      {showError()}\n      {/* this is considered to be the 'children' props */}\n      {signinForm()}\n    </Layout>\n  );\n  //\n};\n\nexport default Signin;\n","import { API } from '../../config';\nimport queryString from 'query-string';\n\n//in what way the product should be displayed and sent back\nexport const getProducts = (sortBy) => {\n  return fetch(`${API}/products/search/?sortBy=${sortBy}&order=desc&limit=3`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//used for the 'load more' products button\n//used for radio buttons/checkboxes\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n  const data = {\n    limit,\n    skip,\n    filters,\n  };\n\n  return fetch(`${API}/products/by/search`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    //convert 'data' object into json string\n    body: JSON.stringify(data),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n//params is going to be the category id and the search\n//used for listing user search products\nexport const list = (params) => {\n  //this allows us to turn the 'params' into a query string for filtering\n  const query = queryString.stringify(params);\n  // console.log('query ', query);\n\n  return fetch(`${API}/products/listProductsByUserSearched/?${query}`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const read = (productId) => {\n  return fetch(`${API}/products/${productId}`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const listRelated = (productId) => {\n  return fetch(`${API}/products/related/${productId}`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//get a generated braintree client token\nexport const getBraintreeClientToken = (userId, token) => {\n  return fetch(`${API}/braintree/getToken/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n  return fetch(`${API}/braintree/payment/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(paymentData),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const createOrder = (userId, token, createOrderData) => {\n  return fetch(`${API}/orders/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ order: createOrderData }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n","import React from 'react';\nimport { API } from '../../config';\n\nconst ShowImage = ({ item }) => (\n  <div className='product-img'>\n    <img\n      src={`${API}/products/photo/${item._id}`}\n      alt={item.name}\n      className='mb-3'\n      style={{maxHeight:\"250px\", maxWidth: \"100%\"}}\n    />\n  </div>\n);\n\nexport default ShowImage;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from '../../actions/core/ShowImage';\nimport { isAuthenticated } from '../../actions/auth/index';\n//for make the current time data readable\nimport moment from 'moment';\nimport {\n  addItem,\n  updateItem,\n  removeItem,\n} from '../../actions/core/cartHelpers';\n\n//component accepting outside props from other components\n// default value for 'showViewProductButton' is 'true'\n// default value for 'showAddToCartButton' is 'true'\nconst Card = ({\n  product,\n  showViewProductButton = true,\n  showAddToCartButton = true,\n  cartUpdate = false,\n  showRemoveProductButton = false,\n  setRun = (f) => f, // default value of function\n  run = undefined, // default value of undefined\n}) => {\n  //\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n\n  const showViewButton = (showViewProductButton) => {\n    return (\n      //if 'showViewProductButton' is true THEN...\n      showViewProductButton && (\n        <Link to={`/products/${product._id}`} className='mr-2'>\n          <button className='btn btn-outline-primary mt-2 mb-2 mr-2'>\n            View Product\n          </button>\n        </Link>\n      )\n    );\n  };\n\n  const addToCart = () => {\n    //once the 'product' has been passed in and executed, redirect the user\n    addItem(product, () => {\n      //once the 'product' has been passed in and executed, redirect the user\n      setRedirect(true);\n    });\n  };\n\n  const shouldRedirect = (redirect) => {\n    if (redirect) {\n      return <Redirect to='/cart' />;\n    }\n  };\n\n  const showAddToCart = (showAddToCartButton) => {\n    return (\n      isAuthenticated() ?\n       //if showAddToCartButton is true THEN...\n        showAddToCartButton && (\n          <button\n            onClick={addToCart}\n            className='btn btn-outline-warning mt-2 mb-2'\n          >\n            Add to cart\n          </button>\n        )\n      : showAddToCartButton && (\n          <Link to='/signup' className='btn btn-outline-warning mt-2 mb-2'>\n            Add to cart\n          </Link>\n        )\n    )\n  };\n\n  const showStock = (quantity) => {\n    return quantity > 0 ? (\n      <span className='badge badge-primary badge-pill'>In Stock</span>\n    ) : (\n      <span className='badge badge-primary badge-pill'>Out of Stock</span>\n    );\n  };\n\n  //handle change of product count in cart\n  const handleChange = (e) => {\n    //'!run' means set it to false because it is by default 'undefined'\n    setRun(!run); // run useEffect in parent Cart\n    //if e.target.value is smaller than 1, then make it 1 by default, otherwise use its current value\n    //just making sure we don't have negative values\n    setCount(e.target.value < 1 ? 1 : e.target.value);\n\n    if (e.target.value >= 1) {\n      //'product._id' to help identify the current product and e.target.value for current total count of the product\n      updateItem(product._id, e.target.value);\n    }\n  };\n\n  const showCartUpdateOptions = (cartUpdate) => {\n    // if cartUpdate is true then return the following\n    return (\n      cartUpdate && (\n        <section>\n          <div className='input-group mb-3'>\n            <div className='input-group-prepend'>\n              <span className='input-group-text'>Adjust Quantity</span>\n              <input\n                type='number'\n                className='form-control'\n                value={count}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n          </div>\n        </section>\n      )\n    );\n  };\n\n  const showRemoveButton = (showRemoveProductButton) => {\n    return (\n      //if showAddToCartButton is true THEN...\n      showRemoveProductButton && (\n        <button\n          onClick={() => {\n            //'!run' means set it to false because it is by default 'undefined'\n            setRun(!run); // run useEffect in parent Cart\n            removeItem(product._id);\n          }}\n          className='btn btn-outline-danger mt-2 mb-2'\n        >\n          Remove Product\n        </button>\n      )\n    );\n  };\n\n  //===================================================================\n\n  return (\n    <div className='card'>\n      <div className='card-header name'>{product.name}</div>\n\n      <div className='card-body'>\n        {shouldRedirect(redirect)}\n        <ShowImage item={product} />\n\n        {/* show only the first 100 characters of the description */}\n        <p className='lead mt-2'>{product.description.substring(0, 100)}</p>\n        <p className='black-10'>${product.price}</p>\n        <p className='black-9'>\n          Category: {product.category && product.category.name}\n        </p>\n        <p className='black-8'>\n          Added on {moment(product.createdAt).fromNow()}\n        </p>\n\n        {showStock(product.quantity)}\n        <br />\n        {showViewButton(showViewProductButton)}\n\n        {showAddToCart(showAddToCartButton)}\n        {showRemoveButton(showRemoveProductButton)}\n        {showCartUpdateOptions(cartUpdate)}\n        {/* --- */}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport { getCategories, list } from '../../actions/core/apiCore';\nimport Card from './Card';\n\nconst Search = () => {\n  const [data, setData] = useState({\n    //the categories which the api sent back\n    categories: [],\n    //the category which the user has selected to be searched\n    category: '',\n    search: '',\n    results: [],\n    //help determine if user has already searched\n    hasSearched: false,\n  });\n\n  useEffect(() => {\n    //load all the categories from the DB onto the state\n    loadCategories();\n  }, []);\n\n  const { categories, category, search, results, hasSearched } = data;\n\n  //load all the categories from the DB onto the state\n  const loadCategories = () => {\n    getCategories().then((dataSentBack) => {\n      if (dataSentBack.error) {\n        console.log(dataSentBack.error);\n      } else {\n        setData({ ...data, categories: dataSentBack });\n      }\n    });\n  };\n\n  const searchData = () => {\n    //if search is true, which it always is then do...\n    if (search) {\n      //the user inputted search word + the user selected category\n      list({ search: search || undefined, category }).then((response) => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          setData({ ...data, results: response, hasSearched: true });\n          console.log(data)\n        }\n      });\n    }\n  };\n\n  const searchSubmit = (e) => {\n    e.preventDefault();\n    searchData();\n  };\n\n  const handleChange = (e) => {\n    setData({\n      ...data,\n      //can also be [search]: 'what ever the user put in the search box'\n      [e.target.name]: e.target.value,\n      hasSearched: false,\n    });\n  };\n\n  const searchMessage = (hasSearched, results) => {\n    if (hasSearched && results.length > 0) {\n      return `Found ${results.length} products`;\n    }\n    if (hasSearched && results.length < 1) {\n      return `No products found`;\n    }\n  };\n\n  //it can just be 'results' 'results = []' is just the default state\n  const searchedProducts = (results = []) => {\n    return (\n      <section>\n        <h2 className='mt-4 mb-4'>{searchMessage(hasSearched, results)}</h2>\n        <div className='row'>\n          {/*For every product inside the state array('results'), loop through each of them and assign \n      an index('i') to each of those categorie's key*/}\n          {results.map((product, i) => (\n            <Card key={i} product={product} />\n          ))}\n        </div>\n      </section>\n    );\n  };\n\n  const searchForm = () => (\n    <form onSubmit={searchSubmit}>\n      <span className='input-group-text'>\n        <div className='input-group-prepend'>\n          <select\n            className='btn mr-2'\n            name='category'\n            onChange={(e) => handleChange(e)}\n          >\n            {/* by default the value is always 'All' */}\n            <option value='All'>All</option>\n            {/*For every category inside the state array, loop through each of them and assign \n            an index('i') to each of those categorie's key*/}\n            {/*the value is there to help identify the category(component) */}\n            {categories.map((c, i) => (\n              //the id of the category\n              <option key={i} value={c._id}>\n                {c.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className='input-group input-group-lg'>\n          <input\n            type='search'\n            className='form-control'\n            name='search'\n            value={search}\n            onChange={(e) => handleChange(e)}\n            placeholder='Search by name'\n          />\n        </div>\n\n        <div className='btn input-group-append' style={{ border: 'none' }}>\n          <button className='input-group-text'>Search</button>\n        </div>\n        {/* --- */}\n      </span>\n    </form>\n  );\n\n  return (\n    <section>\n      <div className='row'>\n        <div className='container mb-3'>{searchForm()}</div>\n        <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\n      </div>\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { getProducts } from '../../actions/core/apiCore';\nimport Card from './Card';\nimport Search from './Search';\n\nconst Home = () => {\n  //load products from API by sell to the UI for user to see\n  const [productsBySell, setProductsBySell] = useState([]);\n  //load products from API by arrival to the UI for user to see\n  const [productsByArrival, setProductsByArrival] = useState([]);\n\n  //runs for the first time or whenever there is a change in the state\n  useEffect(() => {\n    loadProductsByArrival();\n    loadProductsBySell();\n  }, []);\n\n  //load products from API by sell to the UI for user to see\n  const loadProductsBySell = () => {\n    getProducts('sold').then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setProductsBySell(data);\n      }\n    });\n  };\n\n  //load products from API by arrival to the UI for user to see\n  const loadProductsByArrival = () => {\n    getProducts('createdAt').then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setProductsByArrival(data);\n      }\n    });\n  };\n\n  return (\n    <Layout\n      title='Home Page'\n      description='Node React E-commerce App'\n      className='container-fluid'\n    >\n      <Search />\n      <h2 className='mb-4'>New Arrivals</h2>\n      <div className='row'>\n        {/*For every product inside the state array, loop through each of them and assign \n      an index('i') to each of those product's key and pass that product object \n      into the component as a prop */}\n        {productsByArrival.map((product, i) => (\n          <div key={i} className='col-4 mb-3'>\n            <Card product={product} />\n          </div>\n        ))}\n      </div>\n\n      <h2 className='mb-4'>Best Sellers</h2>\n      <div className='row'>\n        {/*For every product inside the state array, loop through each of them and assign \n      an index('i') to each of those product's key and pass that product object \n      into the component as a prop */}\n        {productsBySell.map((product, i) => (\n          <div key={i} className='col-4 mb-3'>\n            <Card product={product} />\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","//'Component' for passing in components as props\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\n//'Component' for passing in components as props and then be able to return that component based on results\n//'rest' is the rest of the other props that the component holds\n//here it will be determined which component will be available/returned\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    //\n    render={(props) =>\n      //if is authenticated give access to this component\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        //if is not authenticated redirect them away from the route\n        <Redirect\n          to={{ pathname: '/signin', state: { from: props.location } }}\n        />\n      )\n    }\n    //\n  />\n);\n\nexport default PrivateRoute;\n","//'Component' for passing in components as props\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\n//'Component' for passing in components as props and then be able to return that component based on results\n//'rest' is the rest of the other props that the component holds\n//here it will be determined which component will be available/returned\nconst AdminRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    //\n    render={(props) =>\n      //if is authenticated give access to this component\n      isAuthenticated() && isAuthenticated().user.role === 1 ? (\n        <Component {...props} />\n      ) : (\n        //if is not authenticated redirect them away from the route\n        <Redirect\n          to={{ pathname: '/signin', state: { from: props.location } }}\n        />\n      )\n    }\n    //\n  />\n);\n\nexport default AdminRoute;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport { Link } from 'react-router-dom';\nimport { getPurchaseHistory } from '../../actions/user/apiUser';\nimport moment from 'moment';\n\nconst Dashboard = () => {\n  // note: 'history' returns [[obj],[obj]]\n  const [history, setHistory] = useState([]);\n\n  const {\n    user: { _id, name, email, role },\n  } = isAuthenticated();\n\n  const token = isAuthenticated().token;\n\n  const init = (userId, token) => {\n    getPurchaseHistory(userId, token).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setHistory(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(_id, token);\n  }, []);\n\n  //==============================================================\n\n  const userLinks = () => {\n    return (\n      <div className='card'>\n        <h4 className='card-header'>User Links</h4>\n        <ul className='list-group'>\n          <li className='list-group-item'>\n            <Link className='nav-link' to='/cart'>\n              My Cart\n            </Link>\n          </li>\n          <li className='list-group-item'>\n            <Link className='nav-link' to={`/user/dashboard/profile/${_id}`}>\n              Update Profile\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  const userInfo = () => {\n    return (\n      <div className='card mb-5'>\n        <h3 className='card-header'>User Information</h3>\n        <ul className='list-group'>\n          <li className='list-group-item'>{name}</li>\n          <li className='list-group-item'>{email}</li>\n          <li className='list-group-item'>\n            {role === 1 ? 'Admin' : 'Registered User'}\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  // note: 'history' returns [[obj],[obj]]\n  const purchaseHistory = (history) => {\n    return (\n      <div className='card mb-5'>\n        <h3 className='card-header'>Purchase History</h3>\n        <ul className='list-group'>\n          <li className='list-group-item'>\n            {/* note: 'history' returns [[obj],[obj]] */}\n            {/* for every orders there are loop through them all (the amount of orders the users have placed) */}\n            {history.map((orders) => {\n              return (\n                <section>\n                  <hr />\n                  {/* for every products in the current 'order', loop through all the products */}\n                  {orders.products.map((product, i) => {\n                    return (\n                      <div key={i}>\n                        <h6>Product name: {product.name}</h6>\n                        <h6>Product price: ${product.price}</h6>\n                        <h6>\n                          Purchased date: {moment(product.createdAt).fromNow()}\n                        </h6>\n                      </div>\n                    );\n                  })}\n                </section>\n              );\n            })}\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  //==============================================================\n\n  return (\n    <Layout\n      title='Dashboard'\n      description={`Good day ${name}!`}\n      className='container'\n    >\n      <div className='row'>\n        <div className='col-3'>{userLinks()}</div>\n        <div className='col-9'>\n          {userInfo()}\n          {/* note: 'history' returns [[obj],[obj]] */}\n          {purchaseHistory(history)}\n          {console.log(history)}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import { API } from '../../config';\n\n//to read the user profile but without the password\nexport const read = (userId, token) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//to update the user profile\nexport const update = (userId, token, user) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(user),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n// Middleware\n//also update the user data in the loacl storage\nexport const updateUser = (user, next) => {\n  //if 'jwt' exist\n  if (localStorage.getItem('jwt')) {\n    // turn json file to object\n    let auth = JSON.parse(localStorage.getItem('jwt'));\n    //assign 'user' data to 'auth' to be able to then send it back to the local storage\n    auth.user = user;\n    //turn object to json file and send to local storage\n    localStorage.getItem('jwt', JSON.stringify(auth));\n    next();\n  }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n  return fetch(`${API}/orders/by/user/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n","import React from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport { Link } from 'react-router-dom';\n\nconst AdminDashboard = () => {\n  const {\n    user: { name, email, role },\n  } = isAuthenticated();\n\n  const adminLinks = () => {\n    return (\n      <div className='card'>\n        <h4 className='card-header'>Admin Links</h4>\n        <ul className='list-group'>\n          <li className='list-group-item'>\n            <Link className='nav-link' to='/admin/dashboard/create/category'>\n              Create Category\n            </Link>\n          </li>\n          <li className='list-group-item'>\n            <Link className='nav-link' to='/admin/dashboard/create/product'>\n              Create Product\n            </Link>\n          </li>\n          <li className='list-group-item'>\n            <Link className='nav-link' to='/admin/orders'>\n              View Orders\n            </Link>\n          </li>\n          <li className='list-group-item'>\n            <Link className='nav-link' to='/admin/dashboard/products'>\n              Manage Products\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  const adminInfo = () => {\n    return (\n      <div className='card mb-5'>\n        <h3 className='card-header'>User Information</h3>\n        <ul className='list-group'>\n          <li className='list-group-item'>{name}</li>\n          <li className='list-group-item'>{email}</li>\n          <li className='list-group-item'>\n            {role === 1 ? 'Admin' : 'Registered User'}\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  return (\n    <Layout\n      title='Dashboard'\n      description={`Good day ${name}!`}\n      className='container'\n    >\n      <div className='row'>\n        <div className='col-3'>{adminLinks()}</div>\n        <div className='col-9'>{adminInfo()}</div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AdminDashboard;\n","import { API } from '../../config';\n\nexport const createCategory = (userId, token, category) => {\n  // console.log(name, email, password);\n  return fetch(`${API}/categories/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    //convert 'user' object into json string\n    body: JSON.stringify(category),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const createProduct = (userId, token, product) => {\n  // console.log(name, email, password);\n  return fetch(`${API}/products/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    //we have to send the form data as well that's why we don't have the 'content-type'\n    body: product,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n  return fetch(`${API}/orders/list/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//get shipping status value\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/orders/status-values/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/orders/${orderId}/status/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ status, orderId }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n/*\n *To Perform CRUD on Product\n -get all products\n -get a single product\n -update a single product\n -delete a single product\n */\n\n//get all products\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//get single product\nexport const getProduct = (productId) => {\n  return fetch(`${API}/products/${productId}`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n//delete product\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/products/${productId}/${userId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/products/${productId}/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: product,\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n","import React, { useState } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport { Link } from 'react-router-dom';\nimport { createCategory } from '../../actions/admin/apiAdmin';\n\nconst AddCategory = () => {\n  const [name, setName] = useState('');\n  const [oldName, setOldName] = useState('');\n\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  //destructuring user and token from local storage\n  const { user, token } = isAuthenticated();\n\n  const handleChange = (e) => {\n    setError('');\n    setName(e.target.value);\n  };\n\n  const clickSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n    setOldName(name)\n    setSuccess(false);\n    //make request to api to create category\n    createCategory(user._id, token, { name }).then((data) => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setError('');  \n        setName('')\n        setSuccess(true);\n      }\n    });\n  };\n\n  const newCategoryForm = () => (\n    <form onSubmit={clickSubmit}>\n      <div className='form-group'>\n        <label className='text-muted'>Name</label>\n        <input\n          type='text'\n          className='form-control'\n          onChange={handleChange}\n          value={name}\n          autoFocus\n          required\n        />\n      </div>\n      <button className='btn btn-outline-primary'>Create Categeory</button>\n    </form>\n  );\n\n  const showSuccess = () => {\n    if (success) {\n      return <h3 className='text-success'>{oldName} has been created</h3>;\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return <h3 className='text-danger'>Category already exist</h3>;\n    }\n  };\n\n  const goBack = () => (\n    <div className='mt-5'>\n      <Link to='/admin/dashboard' className='text-warning'>\n        Back to Dashboard\n      </Link>\n    </div>\n  );\n\n  return (\n    <Layout\n      title='Add a new category'\n      description={`Good day ${user.name}, ready to add a new category?`}\n    >\n      <div className='row'>\n        <div className='col-md-8 offset-md-2'>\n          {showSuccess()}\n          {showError()}\n          {newCategoryForm()}\n          {goBack()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from '../../actions/admin/apiAdmin';\n\nconst AddProduct = () => {\n  const [values, setValues] = useState({\n    name: '',\n    description: '',\n    price: '',\n    categories: [],\n    category: '',\n    shipping: '',\n    quantity: '',\n    photo: '',\n    loading: false,\n    error: '',\n    createdProduct: '',\n    formData: '',\n  });\n\n  const { user, token } = isAuthenticated();\n\n  const {\n    name,\n    description,\n    price,\n    categories,\n    category,\n    shipping,\n    quantity,\n    loading,\n    error,\n    createdProduct,\n    formData,\n  } = values;\n\n  // load categories and set form data\n  const init = () => {\n    getCategories().then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        //collect the array of categories coming from the API Database upon page load\n        setValues({ ...values, categories: data, formData: new FormData() });\n      }\n    });\n  };\n  //runs for the first time and whenever there is a change in the state\n  //here we are making use of the available FormData in the browser, make it available as soon as the component mounts\n  //everytimes the page loads useEffects runs once because of the '[]'\n  useEffect(() => {\n    init();\n  }, []);\n\n  const handleChange = (e) => {\n    //if the name is not 'photo' then set 'value' to the event's value else assign to its first array file\n    const value =\n      e.target.name === 'photo' ? e.target.files[0] : e.target.value;\n    //the form data is what we use to send back to the backend\n    formData.set(e.target.name, value);\n    setValues({ ...values, [e.target.name]: value });\n  };\n\n  const clickSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: '', loading: true });\n\n    createProduct(user._id, token, formData).then((data) => {\n      if (data.error) {\n        //if ther is an error in the 'data' it will be displayed to the user in the UI\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: '',\n          description: '',\n          photo: '',\n          price: '',\n          category: '',\n          shipping: '',\n          quantity: '',\n          loading: false,\n          createdProduct: data.name,\n          formData: new FormData(),\n        });\n      }\n    });\n  };\n\n  const newPostform = () => (\n    <form className='mb-3' onSubmit={clickSubmit}>\n      {/*        */}\n      <h4>Post photo</h4>\n\n      <div className='form-group'>\n        <label className='btn btn-secondary'>\n          <input\n            onChange={(e) => handleChange(e)}\n            type='file'\n            name='photo'\n            accept='image/*'\n          />\n        </label>\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Product name</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='text'\n          className='form-control'\n          name='name'\n          value={name}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Description</label>\n        <textarea\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          name='description'\n          value={description}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Price</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='text'\n          className='form-control'\n          name='price'\n          value={price}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Category</label>\n        <select\n          name='category'\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          value={category}\n        >\n          <option>Please select</option>\n          {/* if 'categories' is filled with non empty array THEN do... */}\n          {/*map through the categories array(which is filled with objects) \n          and display each objects name, the 'i' is just a spare, an index for you to fill \n          the required 'key'*/}\n          {/*the value is there to help identify the category(component) */}\n          {categories &&\n            categories.map((c, i) => (\n              <option key={i} value={c._id}>\n                {c.name}\n              </option>\n            ))}\n        </select>\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Shipping</label>\n        <select\n          name='shipping'\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          value={shipping}\n        >\n          <option>Please select</option>\n          <option value='0'>No</option>\n          <option value='1'>Yes</option>\n        </select>\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Quantity</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='number'\n          className='form-control'\n          name='quantity'\n          value={quantity}\n        />\n      </div>\n\n      <button className='btn btn-outline-primary'>Create Product</button>\n      {/*        */}\n    </form>\n  );\n\n  const showError = () => (\n    <section\n      className='alert alert-danger'\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </section>\n  );\n\n  const showSuccess = () => (\n    <section\n      className='alert alert-info'\n      style={{ display: createdProduct ? '' : 'none' }}\n    >\n      <h2>{`${createdProduct}`} has been created!</h2>\n    </section>\n  );\n\n  const showLoading = () =>\n    loading && (\n      <section className='alert alert-success'>\n        <h2>Loading...</h2>\n      </section>\n    );\n\n  const goBack = () => (\n    <div className='mt-5 mb-5'>\n      <Link to='/admin/dashboard' className='text-warning'>\n        Back to Dashboard\n      </Link>\n    </div>\n  );\n\n  return (\n    <Layout\n      title='Add a new product'\n      description={`Good day ${user.name}, ready to add a new product?`}\n    >\n      <div className='row'>\n        <div className='col-md-8 offset-md-2'>\n          {showLoading()}\n          {showSuccess()}\n          {showError()}\n          {newPostform()}\n          {goBack()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AddProduct;\n","import React, { useState } from 'react';\n\n//'categories' is an object\n//'handleFilters' is a function\nconst Checkbox = ({ categories, handleFilters }) => {\n  const [checked, setChecked] = useState([]);\n\n  const handleToggle = (c) => () => {\n    /* check if the 'c' passed in exist in the array, if it does return its index, \n  if it does not exist in the array, return -1 */\n    const currentCategoryId = checked.indexOf(c);\n    //spread out the data from the state of 'checked' array\n    const newCheckedCategoryId = [...checked];\n    /* if the 'c' passed in was not found in the state array then add it (check it)\n  to the state array, if not, remove it (uncheck it) */\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    }\n    // console.log(newCheckedCategoryId);\n    setChecked(newCheckedCategoryId);\n    //coming from the component passed in as props handleFilters={filters}\n    //sending back 'newCheckCategoryId'\n    handleFilters(newCheckedCategoryId);\n  };\n\n  /*For every category inside the state array, loop through each of them and assign \nan index('i') to each of those category's key*/\n\n  return categories.map((c, i) => (\n    <li key={i} className='list-unstyled'>\n      <input\n        onChange={handleToggle(c._id)}\n        // box will be either check or unchecked based on boolean\n        /*If an index in the state array('checked') exists while holding the id from 'c'\n        then it would return the 'c' index number, else it would return -1 */\n        /*So here if the 'checked.indexOf(c._id)' return value is equal to -1 then value={false} \n        meaning the component box here is unchecked */\n        value={checked.indexOf(c._id === -1)}\n        type='checkbox'\n        className='form-check-input'\n      />\n      <label className='form-check-label'>{c.name}</label>\n    </li>\n  ));\n};\n\nexport default Checkbox;\n","//This component is similar to the 'CheckBox' component that we use in the 'Shop' file\nimport React from 'react';\n\n//passing in the 'price' array of objects to be able to loop through everytime a user checks/unchecks\nconst RadioBox = ({ prices, handleFilters }) => {\n  const handleChange = (event) => {\n    handleFilters(event.target.value);\n  };\n\n  /*For every price object inside the state array, loop through each of them and assign \nan index('i') to each of those prices's key*/\n  return prices.map((p, i) => (\n    <section key={i}>\n      <input\n        onChange={handleChange}\n        //the value is there to help identify the product(component)\n        //if user clicks on this component the value will be returned and stored to the state\n        value={`${p._id}`}\n        //adding a 'name' will make it so that only one radio could be selected\n        name={p}\n        type='radio'\n        className='mr-2 ml-4'\n      />\n      <label className='form-check-label'>{p.name}</label>\n    </section>\n  ));\n};\n\nexport default RadioBox;\n","/*This array of objects is similar to that of the array of objects of 'categories' that \nwere looped through in the Shop component for everytime a user check/uncheck the boxes */\nexport const prices = [\n  {\n    _id: 0,\n    name: 'Any',\n    array: [],\n  },\n  {\n    _id: 1,\n    name: '$0 to $9',\n    array: [0, 9],\n  },\n  {\n    _id: 2,\n    name: '$10 to $19',\n    array: [10, 19],\n  },\n  {\n    _id: 3,\n    name: '$20 to $29',\n    array: [20, 29],\n  },\n  {\n    _id: 4,\n    name: '$30 to $39',\n    array: [30, 39],\n  },\n  {\n    _id: 5,\n    name: '$40 and Up',\n    array: [40, 99],\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport Card from './Card';\n//array of objects (categories)\nimport { getCategories, getFilteredProducts } from '../../actions/core/apiCore';\n//checkbox component\nimport Checkbox from './Checkbox';\n//radio checkbox component\nimport RadioBox from './RadioBox';\n//array of objects (prices)\nimport { prices } from './fixedPrices';\n\nconst Shop = () => {\n  //\n  const [categories, setCategories] = useState([]);\n  const [limit] = useState(6);\n  const [skip, setSkip] = useState(0);\n  //size is the amount of products that exist to be displayed to user\n  const [size, setSize] = useState(0);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [myFilters, setMyFilters] = useState({\n    // NOTE: IT IS VERY IMPORTANT TO HAVE THE 'filters' OBJECT HERE DO NOT REMOVE\n    filters: { category: [], price: [] },\n  });\n\n  //runs for the first time and whenever there is a change in the state\n  //everytimes the page loads useEffects runs once because of the '[]'\n  useEffect(() => {\n    init();\n    loadFilteredResults(skip, limit, myFilters.filters);\n  }, []);\n\n  const init = () => {\n    getCategories().then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setCategories(data);\n      }\n    });\n  };\n\n  // ===========================================================\n  const loadMore = () => {\n    /*We start out at a limit of 6 products to be displayed and then it continually adds up \n    everytime user clicks the 'load more' button*/\n    let toSkip = skip + limit;\n    /*Now the amount to skip the next amount is 6 and then next is 12(0 was its original) and \n    the limit to grab the newest data and sent back is still 6. Note: it does not grab the already old data*/\n    //pass in 'filters' of 'myFilters' for it to be modified and returned\n    getFilteredProducts(toSkip, limit, myFilters.filters).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        //add newer data to the previous state array\n        setFilteredResults([...filteredResults, ...data.data]);\n        //the 'size' is an object show us how many products there are, that are sent back\n        setSize(data.size);\n        //use this to skip pages\n        setSkip(toSkip);\n      }\n    });\n  };\n\n  const loadMoreButton = () => {\n    return (\n      //size is the amount of products that exist to be displayed to user\n      size > 0 &&\n      size >= limit && (\n        <button onClick={loadMore} className='btn btn-warning mb-5 '>\n          Load More\n        </button>\n      )\n    );\n  };\n  // ===========================================================\n\n  const loadFilteredResults = (newFilters) => {\n    // console.log(newFilters);\n    getFilteredProducts(skip, limit, newFilters).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setFilteredResults(data.data);\n        //the 'size' is an object show us how many products there are, that are sent back\n        setSize(data.size);\n        //use this to load more later\n        setSkip(0);\n      }\n    });\n  };\n\n  //everytime the user checks/unchecks the boxs, 'myFilters' state updates immediately\n  //array of objects will be 'filters' like categories\n  const handleFilters = (filters, filterBy) => {\n    // console.log('SHOP', filters, filterBy);\n    const newFilters = { ...myFilters };\n    //grabs 'newFilters' state at its [category/price]\n    //'filterBy' will be either 'category' or 'price'\n    //update 'filter' object inside 'newFilter' with the latest check/unchecked boxes from 'filters' array of categories/prices\n    newFilters.filters[filterBy] = filters;\n\n    if (filterBy === 'price') {\n      //pretty much holds a value like '[10, 19]'\n      let priceValues = handlePrice(filters);\n      //grabs tbe 'filters' object from 'newFilters' state at its [category/price]\n      //'filterBy' will be either 'category' or 'price'\n      //update 'filters' object from 'newFilter' with the latest check/unchecked boxes from 'filters' array of prices\n      //will update it to somthing like '[10, 19]'\n      newFilters.filters[filterBy] = priceValues;\n    }\n    //pass the 'filters' object from 'myFilters' containing '{category: [], price: []}'\n    loadFilteredResults(myFilters.filters);\n\n    setMyFilters(newFilters);\n  };\n\n  //pretty much returning a value like 'array: [10, 19]'\n  const handlePrice = (value) => {\n    //the array of objects(prices) from the 'fixedPrices' file\n    const data = prices;\n    let array = [];\n    /*The id of each object in the 'price' array is numbered from 0-10, so it is very convenient\n    for us here to say, for every key(as in, 'index' going from 0-10) in 'data', loop through the array. \n    And so if the current index is at position 0 of the 'data'(array) and the id of that current\n    'data'(array) index is equal to the 'clicked upon button by user', its value is returned back, then\n    assign that value to the variable 'array' */\n    //pretty much identifying which button the user clicked and sync it with the entire price array\n    for (let key in data) {\n      if (data[key]._id === parseInt(value)) {\n        //accessing the data[indexNumber] and then grab that 'data' objects 'array' and assign it here\n        //pretty much holds a value like '[10, 19]'\n        array = data[key].array;\n      }\n    }\n    //pretty much returning a value like '[10, 19]'\n    return array;\n  };\n\n  //===================================================\n\n  return (\n    <Layout\n      title='Shop Page'\n      description='Search and find books of your choice'\n      className='container-fluid'\n    >\n      <div className='row'>\n        <div className='col-4'>\n          <h4>Filter by categories</h4>\n          <ul>\n            <Checkbox\n              categories={categories}\n              /*handleFilters={filters} is a parameter PROPS that is going to accept the inputted variable\n              inside this component and once the output has been returned, the local function here\n              is called upon and now has new arguments. => 'handleFilters(filters, 'category')' */\n              handleFilters={(filters) => handleFilters(filters, 'category')}\n            />\n          </ul>\n\n          <h4>Filter by price range</h4>\n          {/* this component is similar to that of the 'Checkbox' component from above */}\n          <div>\n            <RadioBox\n              // array of objects for 'price' coming from the 'fixedPrices' file component\n              prices={prices}\n              /*handleFilters={filters} is a parameter PROPS that is going to accept the inputted variable\n              inside this component and once the output has been returned, the local function here\n              is called upon and now has new arguments. => 'handleFilters(filters, 'category')' */\n              handleFilters={(filters) => handleFilters(filters, 'price')}\n            />\n          </div>\n        </div>\n\n        <div className='col-8'>\n          <h2 className='mb-4'>Products</h2>\n          <div className='row'>\n            {/*For every product inside the state array, loop through each of them and assign \n      an index('i') to each of those product's key and pass that product object \n      into the component as a prop */}\n            {filteredResults.map((product, i) => (\n              <div key={i} className='col-4 mb-3'>\n                <Card product={product} />\n              </div>\n            ))}\n          </div>\n          <hr />\n          {loadMoreButton()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Shop;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from '../../actions/core/apiCore';\nimport Card from './Card';\n\nconst Product = (props) => {\n  const [product, setProduct] = useState({});\n  const [relatedProduct, setRelatedProduct] = useState([]);\n\n  useEffect(() => {\n    // on load assign the params productId to variable\n    const productId = props.match.params.productId;\n    loadSingleProduct(productId);\n    //whenever there is a change in the 'props' useEffect reloads\n    //in this case if user clicks on view product on another related item\n  }, [props]);\n\n  const loadSingleProduct = (productId) => {\n    read(productId).then((data) => {\n      if (data.error) {\n      } else {\n        //get the data about the id sent through the params\n        setProduct(data);\n        //fetch related products\n        listRelated(data._id)\n          .then((data) => {\n          if (data.error) {\n            console.log(data.error)\n          } else {\n            setRelatedProduct(data);\n          }\n        });\n      }\n    });\n  };\n\n  return (\n    <Layout\n      title={product && product.name}\n      description={\n        //if produdct exist, THEN, if product.description exist, THEN....\n        product && product.description && product.description.substring(0, 100)\n      }\n      className='container-fluid'\n    >\n      <div className='row'>\n        <div className='col-8'>\n          {\n            //if produdct exist, THEN, if product.description exist, THEN....\n            product && product.description && (\n              <Card product={product} showViewProductButton={false} />\n            )\n          }\n        </div>\n        <div className='col-4'>\n          <h4>Related Products</h4>\n          {/*For every product inside the state array, loop through each of them and assign \n      an index('i') to each of those product's key and pass that product object \n      into the component as a prop */}\n          {relatedProduct.map((p, i) => (\n            <div className='mb-3'>\n              <Card key={i} product={p} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Product;\n","import React, { useState, useEffect } from 'react';\nimport {\n  getBraintreeClientToken,\n  processPayment,\n  createOrder,\n} from '../../actions/core/apiCore';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport { Link } from 'react-router-dom';\n//allows for payment information layout\nimport DropIn from 'braintree-web-drop-in-react';\nimport { emptyCart } from '../../actions/core/cartHelpers';\n\n//\n\n//products array sent through as props\nconst Checkout = ({\n  products,\n  setRun = (f) => f, // default value of function\n  run = undefined, // default value of undefined\n}) => {\n  const [data, setData] = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: '',\n  });\n\n  //if user is authenticated THEN get user's id and token\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then((dataSentBack) => {\n      if (dataSentBack.error) {\n        setData({ ...data, error: dataSentBack.error });\n      } else {\n        setData({ ...data, clientToken: dataSentBack.clientToken });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const handleAddress = (event) => {\n    setData({ ...data, address: event.target.value });\n  };\n\n  const getTotal = () => {\n    //'products' is an array of products\n    return products.reduce((accumulator, nextValue) => {\n      /*Starting out 'currentValue' is 0, nextValue is the first product item\n      in the array passed in. And so we get its total 'count' * 'price'. Then we add + \n      it to the accumulator. After that, it loops through the next product item in line \n      of the product array prop */\n      return accumulator + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const buy = () => {\n    // 'nonce' is the payment method (card type, card number)\n    // nonce = data.instance.requestPaymentMethod()\n    //nonce(token) is what we would use to send to the backend\n    let nonce;\n    let getNonce = data.instance\n      .requestPaymentMethod()\n      .then((dataSentBack) => {\n        // console.log(data);\n        // nonce = data.nonce;\n        //once you have nonce (card type, card number), send nonce as 'paymentMethodNonce'\n        //and also total to be charged\n        // console.log(\n        //   'send nonce and total to process',\n        //   nonce,\n        //   getTotal(products)\n        // );\n        nonce = dataSentBack.nonce;\n        const paymentData = {\n          paymentMethodNonce: nonce,\n          amount: getTotal(products),\n        };\n        //\n        processPayment(userId, token, paymentData)\n          .then((response) => {\n            const createOrderData = {\n              products: products,\n              transaction_id: response.transaction.id,\n              amount: response.transaction.amount,\n              address: data.address,\n            };\n            \n            //create order\n            createOrder(userId, token, createOrderData);\n\n            //\n\n            //empty cart\n            emptyCart(() => {\n              //'!run' means set it to false because it is by default 'undefined\n              setRun(!run);\n              setData({ ...data, success: true });\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch((error) => {\n        // console.log('dropin error:', error);\n        setData({ ...data, error: error.message });\n      });\n  };\n\n  //allows for payment information layout(imported from third party source)\n  const showDropIn = () => (\n    /* 'onBlur' means if you click anywhere on this payment component then it will remove the\n    error message displayed to the user if there were */\n    <section\n      //this works for chrome\n      onBlur={() => setData({ ...data, error: '' })}\n      //this is a poor alternative for firefox =(\n      onClick={() => setData({ ...data, error: '' })}\n    >\n      {/* if token is not empty THEN if more than one products exist THEN do... */}\n      {data.clientToken !== null && products.length > 0 ? (\n        <div>\n          <div className='form-group mb-3'>\n            <label className='text-muted'>Delivery address:</label>\n            <textarea\n              onChange={handleAddress}\n              className='form-control'\n              value={data.address}\n              placeholder='Type your delivery address here...'\n            />\n          </div>\n\n          {/* allows for payment information layout */}\n          <DropIn\n            options={{\n              authorization: data.clientToken,\n              //option to pay with paypal as well\n              paypal: {\n                flow: 'vault',\n              },\n            }}\n            //assigns the empty 'data.instance' with with 'instance'\n            onInstance={(instance) => (data.instance = instance)}\n          />\n          <button\n            //invoke 'buy' function only when button is clicked\n            onClick={buy}\n            className='btn btn-success btn-block'\n          >\n            Pay\n          </button>\n        </div>\n      ) : null}\n    </section>\n  );\n\n  const showCheckout = () => {\n    return isAuthenticated() ? (\n      <div>{showDropIn()}</div>\n    ) : (\n      <Link to='/signin'>\n        <button className='btn btn-primary'>Sign in to checkout</button>\n      </Link>\n    );\n  };\n\n  const showError = (error) => (\n    <section\n      className='alert alert-danger'\n      //if error exist then display, else display none\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </section>\n  );\n\n  const showSucesss = (success) => (\n    <section\n      className='alert alert-info'\n      //if error exist then display, else display none\n      style={{ display: success ? '' : 'none' }}\n    >\n      Thanks! Your payment was successful!\n    </section>\n  );\n\n  // ======================================================================\n  return (\n    <div>\n      <h2>Total:${getTotal()}</h2>\n      {showSucesss(data.success)}\n      {showError(data.error)}\n      {showCheckout()}\n    </div>\n  );\n};\n\nexport default Checkout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from './Layout';\nimport { getCart } from '../../actions/core/cartHelpers';\nimport Card from './Card';\nimport Checkout from './Checkout';\n\nconst Cart = () => {\n  //\n  const [items, setItem] = useState([]);\n  //this is designed to refresh the page everytime we have a change in things that need to be consistently updated\n  const [run, setRun] = useState(false);\n\n  useEffect(() => {\n    setItem(getCart());\n    //anytime there is ANY change to the products in the 'run'  state, RELOAD the entire component\n  }, [run]);\n\n  const showItems = (items) => {\n    return (\n      <div>\n        <h2>Your cart has {`${items.length}`} items</h2>\n        <hr />\n        {/*Loop through the 'items' array, and assign the 'i'(index) uniquely for \n        each and everysingle one of the products and pass in the product as a prop for the component */}\n        {items.map((product, i) => (\n          <Card\n            key={i}\n            product={product}\n            showAddToCartButton={false}\n            cartUpdate={true}\n            showRemoveProductButton={true}\n            setRun={setRun} //passing in the 'setRun' state as a paramter function\n            run={run} //passing in the 'run' state as a paramter\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const noItemsMessage = () => (\n    <h2>\n      Your cart is empty.\n      <br />\n      <Link to='/shop'> Continue shopping</Link>\n    </h2>\n  );\n\n  return (\n    <Layout\n      title='Shopping Cart'\n      description='Manage your cart items. Add remove checkout or continue shopping'\n      className='container-fluid'\n    >\n      <div className='row'>\n        <div className='col-6'>\n          {items.length > 0 ? showItems(items) : noItemsMessage()}\n        </div>\n\n        <div className='col-6'>\n          <h2 className='mb-4'>Your cart summary</h2>\n          <hr />\n          <Checkout\n            products={items}\n            setRun={setRun} //passing in the 'setRun' state as a paramter function\n            run={run} //passing in the 'run' state as a paramter\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Cart;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport {\n  listOrders,\n  getStatusValues,\n  updateOrderStatus,\n} from '../../actions/admin/apiAdmin';\n// to help organize date and time\nimport moment from 'moment';\n\nconst Orders = () => {\n  const [orders, setOrders] = useState([]);\n  //enum values sent back so that you can adjust the shipping status\n  const [statusValues, setStatusValues] = useState([]);\n\n  const { user, token } = isAuthenticated();\n\n  //load all the orders placed by all users\n  const loadOrders = () => {\n    listOrders(user._id, token).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setOrders(data);\n      }\n    });\n  };\n\n  const loadStatusValues = () => {\n    //enum values sent back so that you can adjust the shipping status\n    getStatusValues(user._id, token).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setStatusValues(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadOrders();\n    loadStatusValues();\n  }, []);\n\n  const showOrdersLength = () => {\n    if (orders.length > 0) {\n      return (\n        <h1 className='font-weight-bold'>Total orders: {orders.length}</h1>\n      );\n    } else {\n      return <h1 className='text-danger'>No orders</h1>;\n    }\n  };\n\n  const showInput = (name, value) => (\n    <div className='input-group mb-2 mr-sm-2'>\n      <div className='input-group-prepend'>\n        <div className='input-group-text'>{name}</div>\n        <input type='text' value={value} className='form-control' readOnly />\n      </div>\n    </div>\n  );\n\n  //to be able to update the shipping status to the backend\n  const handleStatusChange = (event, orderId) => {\n    updateOrderStatus(user._id, token, orderId, event.target.value).then(\n      (data) => {\n        if (data.error) {\n          console.log('Status update failed');\n        } else {\n          loadOrders();\n        }\n      }\n    );\n  };\n\n  //show shipping status\n  const showStatus = (order) => (\n    <div className='form-group'>\n      <h3 className='mark mb-4'>Status: {order.status}</h3>\n      <select\n        className='form-control'\n        //to be able to update the shipping status to the backend\n        onChange={(e) => handleStatusChange(e, order._id)}\n      >\n        {/* option to update the shipping status */}\n        <option>Update Status</option>\n        {/*Loop through the state array 'statusValues' and for every status available\n        from that array create an option for it*/}\n        {statusValues.map((status, i) => (\n          <option key={i} value={status}>\n            {status}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n\n  //==========================================================\n  return (\n    <Layout\n      title='Order History'\n      description={`Good day ${user.name}, you can manage all your orders here`}\n    >\n      <div className='row'>\n        <div className='col-md-8 offset-md-2'>\n          {showOrdersLength()}\n\n          {/*For every order inside the orders state array, loop through each of them and assign \n      an index('i') to each of those order's key */}\n          {orders.map((order, i) => {\n            return (\n              <div\n                className='mt-5'\n                key={i}\n                style={{ borderBottom: '5px solid indigo' }}\n              >\n                <h2 className='mb-5'>\n                  <span style={{ backgroundColor: '#b8e994' }}>\n                    Order ID: {order._id}\n                  </span>\n                </h2>\n\n                <ul className='list-group mb-2'>\n                  <li className='list-group-item'>{showStatus(order)}</li>\n                  <li className='list-group-item'>\n                    Transaction ID: {order.transaction_id}\n                  </li>\n                  <li className='list-group-item'>Amount: ${order.amount}</li>\n                  <li className='list-group-item'>\n                    Ordered by: {order.user.name}\n                  </li>\n                  <li className='list-group-item'>\n                    Ordered on: {moment(order.createdAt).fromNow()}\n                  </li>\n                  <li className='list-group-item'>\n                    Delivery address: {order.address}\n                  </li>\n                </ul>\n\n                <h3 className='mt-4 mb-4 font-italic'>\n                  Total products in the order: {order.products.length}\n                </h3>\n\n                {/* for every product in the 'order.products' loop through them and\n                display their info */}\n                {order.products.map((product, i) => (\n                  <div\n                    className='mb-4'\n                    key={i}\n                    style={{ padding: '20px', border: '1px solid indigo' }}\n                  >\n                    {showInput('Product name', product.name)}\n                    {showInput('Product price', product.price)}\n                    {showInput('Product total', product.count)}\n                    {showInput('Product Id', product._id)}\n                  </div>\n                ))}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Orders;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport {Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from '../../actions/user/apiUser';\n\n//'match' comes directly from 'props.match' props being the default\n//this is a way to get the params 'id' from the url\nconst Profile = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false,\n  });\n\n  const { token } = isAuthenticated();\n  const { name, email, password, error, success } = values;\n\n  const init = (userId) => {\n    read(userId, token).then((data) => {\n      if (data.error) {\n        setValues({\n          ...values,\n          error: true,\n        });\n      } else {\n        setValues({ ...values, name: data.name, email: data.email });\n      }\n    });\n  };\n\n  useEffect(() => {\n    //get the parameter ':userId' from the url\n    init(match.params.userId);\n  }, []);\n\n  //===========================================================\n\n  const handleChange = (e) => {\n    setValues({ ...values, error: false, [e.target.name]: e.target.value });\n  };\n\n  const clickSubmit = (e) => {\n    e.preventDefault();\n    //update the API backend\n    //'match.params.userId' gets the parameter ':userId' from the url\n    update(match.params.userId, token, { name, email, password }).then(\n      (data) => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          //update the local storage\n          //'data' is the new updated data sent back from the backend\n          updateUser(data, () => {\n            //this is the 'next' paramater that is executed after the middleware 'updateUser' has finished with 'data'\n            setValues({\n              ...values,\n              name: data.name,\n              email: data.email,\n              success: true,\n            });\n          });\n        }\n      }\n    );\n  };\n\n  const redirectUser = (success) => {\n    if (success) {\n      return <Redirect to='/cart' />;\n    }\n  };\n\n  const profileUpdate = (name, email, password) => (\n    <form>\n      <section className='form-group'>\n        <label className='text-muted'>Name</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          name='name'\n          value={name}\n        />\n      </section>\n      <section className='form-group'>\n        <label className='text-muted'>Email</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          name='email'\n          value={email}\n        />\n      </section>\n      <section className='form-group'>\n        <label className='text-muted'>Password</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          name='password'\n          value={password}\n        />\n      </section>\n\n      <button onClick={clickSubmit} className='btn btn-primary'>\n        Submit\n      </button>\n    </form>\n  );\n\n  //===========================================================\n  return (\n    <Layout\n      title='Profile'\n      description='Update your profile'\n      className='container-fluid'\n    >\n      <h2 className='mb-4'>Profile Update</h2>\n      {profileUpdate(name, email, password)}\n      {redirectUser(success)}\n    </Layout>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport { Link } from 'react-router-dom';\nimport { getProducts, deleteProduct } from '../../actions/admin/apiAdmin';\n\nconst ManageProducts = () => {\n  const [products, setProducts] = useState([]);\n\n  const { user, token } = isAuthenticated();\n\n  const loadProducts = () => {\n    getProducts().then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setProducts(data);\n      }\n    });\n  };\n\n  const destroy = (productId) => {\n    deleteProduct(productId, user._id, token).then((data) => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        loadProducts();\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  //=====================================================================\n  return (\n    <Layout\n      title='Manage Products'\n      description='Perform CRUD on products'\n      className='container-fluid'\n    >\n      <div className='row'>\n        <div className='col-12'>\n          <h2 className='text-center'>Total {products.length} products</h2>\n          <hr/>\n          <ul className='list-group'>\n            {/* loop through the products state array and assign the index('i') to each products key */}\n            {products.map((p, i) => (\n              <li\n                key={i}\n                className='list-group-item d-flex justify-content-between align-items-center'\n              >\n                <strong>{p.name}</strong>\n                <Link to={`/admin/dashboard/products/update/${p._id}`}>\n                  <span className='badge badge-warning badge-pill'>Update</span>\n                </Link>\n                <span\n                  onClick={() => destroy(p._id)}\n                  className='badge badge-danger badge-pill'\n                >\n                  Delete\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ManageProducts;\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../../actions/auth/index';\nimport { Link } from 'react-router-dom';\nimport {\n  getProduct,\n  getCategories,\n  updateProduct,\n} from '../../actions/admin/apiAdmin';\n\n//'match' comes directly from 'props.match' props being the default\n//this is a way to get the params 'id' from the url\nconst UpdateProduct = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    description: '',\n    price: '',\n    categories: [],\n    category: '',\n    shipping: '',\n    quantity: '',\n    photo: '',\n    loading: false,\n    error: '',\n    createdProduct: '',\n    formData: '',\n  });\n\n  const { user, token } = isAuthenticated();\n\n  const {\n    name,\n    description,\n    price,\n    categories,\n    category,\n    shipping,\n    quantity,\n    loading,\n    error,\n    createdProduct,\n    formData,\n  } = values;\n\n  const init = (productId) => {\n    getProduct(productId).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        //populate the state\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          shipping: data.shipping,\n          quantity: data.quantity,\n          formData: new FormData(),\n        });\n        //load categories\n        initCategories();\n      }\n    });\n  };\n\n  // load categories and set form data\n  const initCategories = () => {\n    getCategories().then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        //collect the array of categories coming from the API Database upon page load\n        //The reason why we don't do ...values here is because it will reset and remove the preset input boxes\n        setValues({ categories: data, formData: new FormData() });\n      }\n    });\n  };\n\n  //runs for the first time and whenever there is a change in the state\n  //here we are making use of the available FormData in the browser, make it available as soon as the component mounts\n  //everytimes the page loads useEffects runs once because of the '[]'\n  useEffect(() => {\n    //'match' is imported in to get the url params id\n    init(match.params.productId);\n  }, []);\n\n  const handleChange = (e) => {\n    //if the name is not 'photo' then set 'value' to the event's value else assign to its first array file\n    const value =\n      e.target.name === 'photo' ? e.target.files[0] : e.target.value;\n    //the form data is what we use to send back to the backend\n    formData.set(e.target.name, value);\n    setValues({ ...values, [e.target.name]: value });\n  };\n\n  const clickSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: '', loading: true });\n\n    updateProduct(match.params.productId, user._id, token, formData).then(\n      (data) => {\n        if (data.error) {\n          //if there is an error in the 'data' it will be displayed to the user in the UI\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: '',\n            description: '',\n            photo: '',\n            price: '',\n            category: '',\n            shipping: '',\n            quantity: '',\n            loading: false,\n            createdProduct: data.name,\n            formData: new FormData(),\n          });\n\n          setTimeout(() => {\n            window.location.reload();\n          }, 1500);\n        }\n      }\n    );\n  };\n\n  const newPostform = () => (\n    <form className='mb-3' onSubmit={clickSubmit}>\n      {/*        */}\n      <h4>Post photo</h4>\n\n      <div className='form-group'>\n        <label className='btn btn-secondary'>\n          <input\n            onChange={(e) => handleChange(e)}\n            type='file'\n            name='photo'\n            accept='image/*'\n          />\n        </label>\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Product name</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='text'\n          className='form-control'\n          name='name'\n          value={name}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Description</label>\n        <textarea\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          name='description'\n          value={description}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Price</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='text'\n          className='form-control'\n          name='price'\n          value={price}\n        />\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Category</label>\n        <select\n          name='category'\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          value={category}\n        >\n          <option>Please select</option>\n          {/* if 'categories' is filled with non empty array THEN do... */}\n          {/*map through the categories array(which is filled with objects) \n          and display each objects name, the 'i' is just a spare, an index for you to fill \n          the required 'key'*/}\n          {/*the value is there to help identify the category(component) */}\n          {categories &&\n            categories.map((c, i) => (\n              <option key={i} value={c._id}>\n                {c.name}\n              </option>\n            ))}\n        </select>\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Shipping</label>\n        <select\n          name='shipping'\n          onChange={(e) => handleChange(e)}\n          className='form-control'\n          value={shipping}\n        >\n          <option>Please select</option>\n          <option value='0'>No</option>\n          <option value='1'>Yes</option>\n        </select>\n      </div>\n\n      <div className='form-group'>\n        <label className='text-muted'>Quantity</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          type='number'\n          className='form-control'\n          name='quantity'\n          value={quantity}\n        />\n      </div>\n\n      <button className='btn btn-outline-primary'>Update Product</button>\n      {/*        */}\n    </form>\n  );\n\n  const showError = () => (\n    <section\n      className='alert alert-danger'\n      style={{ display: error ? '' : 'none' }}\n    >\n      {error}\n    </section>\n  );\n\n  const showSuccess = () => (\n    <section\n      className='alert alert-info'\n      style={{ display: createdProduct ? '' : 'none' }}\n    >\n      <h2>{`${createdProduct}`} has been updated!</h2>\n    </section>\n  );\n\n  const showLoading = () =>\n    loading && (\n      <section className='alert alert-success'>\n        <h2>Loading...</h2>\n      </section>\n    );\n\n  const goBack = () => (\n    <div className='mt-5 mb-5'>\n      <Link to='/admin/dashboard' className='text-warning'>\n        Back to Dashboard\n      </Link>\n    </div>\n  );\n\n  return (\n    <Layout\n      title='Add a new product'\n      description={`Good day ${user.name}, ready to add a new product?`}\n    >\n      <div className='row'>\n        <div className='col-md-8 offset-md-2'>\n          {showLoading()}\n          {showSuccess()}\n          {showError()}\n          {newPostform()}\n          {goBack()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default UpdateProduct;\n","import React from 'react';\n//'BrowserRouter' makes props available to other nested components\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Signup from './components/user/Signup';\nimport Signin from './components/user/Signin';\nimport Home from './components/core/Home';\nimport PrivateRoute from './actions/auth/PrivateRoute';\nimport AdminRoute from './actions/auth/AdminRoute';\nimport Dashboard from './components/user/UserDashboard';\nimport AdminDashboard from './components/admin/AdminDashboard';\nimport AddCategory from './components/admin/AddCategory';\nimport AddProduct from './components/admin/AddProduct';\nimport Shop from './components/core/Shop';\nimport Product from './components/core/Product';\nimport Cart from './components/core/Cart';\nimport Orders from './components/admin/Orders';\nimport Profile from './components/user/Profile';\nimport ManageProducts from './components/admin/ManageProducts';\nimport UpdateProduct from './components/admin/UpdateProduct';\n\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/shop' exact component={Shop} />\n        <Route path='/signin' exact component={Signin} />\n        <Route path='/signup' exact component={Signup} />\n        <PrivateRoute path='/user/dashboard' exact component={Dashboard} />\n        <PrivateRoute path='/user/dashboard/profile/:userId' exact component={Profile} />\n        {/* --- */}\n        <AdminRoute path='/admin/dashboard' exact component={AdminDashboard} />\n        <AdminRoute path='/admin/dashboard/products' exact component={ManageProducts} />\n        <AdminRoute path='/admin/dashboard/products/update/:productId' exact component={UpdateProduct} />\n        <AdminRoute path='/admin/dashboard/create/category' exact component={AddCategory} />\n        <AdminRoute path='/admin/dashboard/create/product' exact component={AddProduct} />\n        <Route path='/products/:productId' exact component={Product} />\n        <Route path='/cart' exact component={Cart} />\n        <Route path='/admin/orders' exact component={Orders} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n"],"sourceRoot":""}